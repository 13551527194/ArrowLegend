var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var GameUI_1 = require("./script/GameUI");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("script/GameUI.ts", GameUI_1.default);
    };
    GameConfig.width = 640;
    GameConfig.height = 1136;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "none";
    GameConfig.alignV = "top";
    GameConfig.alignH = "left";
    GameConfig.startScene = "test/TestScene.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./script/GameUI":7}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var GameBG_1 = require("./game/GameBG");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameBG_1.default.width, GameBG_1.default.height);
        else
            Laya.init(GameBG_1.default.width, GameBG_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        //Laya.stage.scaleMode = GameConfig.scaleMode;
        //console.log(Laya.Stage.SCALE_FIXED_WIDTH);
        Laya.stage.scaleMode = Laya.Stage.SCALE_FIXED_WIDTH;
        //Laya.stage.screenMode = GameConfig.screenMode;
        Laya.stage.screenMode = Laya.Stage.SCREEN_NONE;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        //加载IDE指定的场景
        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene);
    };
    return Main;
}());
//激活启动类
new Main();
},{"./GameConfig":1,"./game/GameBG":3}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Image = Laya.Image;
var Sprite = Laya.Sprite;
var GameBG = /** @class */ (function (_super) {
    __extends(GameBG, _super);
    function GameBG() {
        var _this = _super.call(this) || this;
        _this.bgh = 0;
        GameBG.orthographicVerticalSize = GameBG.wnum * Laya.stage.height / Laya.stage.width;
        GameBG.gameBG = _this;
        _this.mySp = new Sprite();
        _this.mySp.graphics.drawRect(0, 0, GameBG.mw, GameBG.mw, 0x00ff00);
        return _this;
    }
    GameBG.prototype.getBgh = function () {
        return this.bgh;
    };
    GameBG.prototype.isHit = function (dx, dy) {
        var dx0 = dx - GameBG.mw2;
        var dy0 = dy - GameBG.mw2;
        var b = false;
        for (var i = 0; i < GameBG.arrsp.length; i++) {
            var element = GameBG.arrsp[i];
            if (this.isHit_(dx0, dy0, element)) {
                b = true;
            }
        }
        return b;
    };
    GameBG.prototype.isHit_ = function (dx, dy, d2) {
        return dx < d2.x + GameBG.ww &&
            dx + GameBG.mw > d2.x &&
            dy < d2.y + GameBG.ww &&
            GameBG.mw + dy > d2.y;
    };
    GameBG.prototype.updata = function (x, y) {
        this.mySp.x = x - GameBG.mw2;
        this.mySp.y = y - GameBG.mw2;
    };
    GameBG.prototype.drawR = function () {
        var img;
        var k = 0;
        var ww = GameBG.ww;
        //GameBG.orthographicVerticalSize
        var sp;
        for (var j = 0; j < GameBG.hnum; j++) {
            this.bgh += ww;
            for (var i = 0; i < GameBG.wnum + 1; i++) {
                img = new Image();
                img.skin = (k % 2 == 0) ? "comp/g256h.jpg" : "comp/g256l.jpg";
                this.addChild(img);
                img.x = i * ww - (ww / 2);
                img.y = j * ww;
                //console.log(i,j);
                if (k < GameBG.arr.length && GameBG.arr[k] == 1) {
                    sp = new Sprite();
                    sp.graphics.drawRect(0, 0, GameBG.ww, GameBG.ww, 0xff0000);
                    sp.x = i * ww - (ww / 2);
                    sp.y = j * ww;
                    this.addChild(sp);
                    this.sp = sp;
                    GameBG.arrsp.push(sp);
                }
                k++;
            }
        }
        this.addChild(this.mySp);
        // this.bgh = Laya.stage.height - this.bgh;
    };
    GameBG.wnum = 12;
    GameBG.hnum = 48;
    GameBG.width = 750;
    //static height:number = 1000;
    GameBG.height = 1334;
    GameBG.ww = GameBG.width / GameBG.wnum; //地形的碰撞方块尺寸
    GameBG.ww2 = GameBG.ww / 2; // 1/2 地形的碰撞方块尺寸
    GameBG.fw = GameBG.ww * 0.2;
    GameBG.mw = GameBG.ww - GameBG.fw; //主角的碰撞方块尺寸
    GameBG.mw2 = GameBG.mw / 2; // 1/2 主角的碰撞方块尺寸
    GameBG.orthographicVerticalSize = GameBG.wnum * GameBG.height / GameBG.width;
    GameBG.arrsp = [];
    GameBG.arr0 = [
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0,
        0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0,
        0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ];
    GameBG.arr = [
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,
        0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,
        0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    ];
    return GameBG;
}(Laya.Sprite));
exports.default = GameBG;
},{}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameHitBox = /** @class */ (function () {
    function GameHitBox(ww, hh) {
        this.x_ = 0;
        this.y_ = 0;
        this.ww_ = 2;
        this.hh_ = 2;
        this.cx_ = 1;
        this.cy_ = 1;
        this.h2_ = 1;
        this.w2_ = 1;
        this.top_ = 0;
        this.left_ = 0;
        this.right_ = 0;
        this.bottom_ = 0;
        this.ww_ = ww;
        this.hh_ = hh;
        this.h2_ = this.hh_ / 2;
        this.w2_ = this.ww_ / 2;
        this.setXY(0, 0);
    }
    Object.defineProperty(GameHitBox.prototype, "ww", {
        get: function () {
            return this.ww_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameHitBox.prototype, "hh", {
        get: function () {
            return this.hh_;
        },
        enumerable: true,
        configurable: true
    });
    GameHitBox.prototype.setXY = function (xx, yy) {
        this.x_ = xx;
        this.y_ = yy;
        this.cx_ = this.x_ + this.w2_;
        this.cy_ = this.y_ + this.h2_;
        this.update();
    };
    GameHitBox.prototype.setCenter = function (xx, yy) {
        this.cx_ = xx;
        this.cy_ = yy;
        this.x_ = this.cx_ - this.w2_;
        this.y_ = this.cy_ - this.h2_;
        this.update();
    };
    GameHitBox.prototype.update = function () {
        this.top_ = this.y_;
        this.left_ = this.x_;
        this.bottom_ = this.y_ + this.hh_;
        this.right_ = this.x_ + this.ww_;
    };
    Object.defineProperty(GameHitBox.prototype, "cx", {
        get: function () {
            return this.cx_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameHitBox.prototype, "cy", {
        get: function () {
            return this.cy_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameHitBox.prototype, "x", {
        get: function () {
            return this.x_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameHitBox.prototype, "y", {
        get: function () {
            return this.y_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameHitBox.prototype, "top", {
        //top left right bottom
        get: function () {
            return this.top_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameHitBox.prototype, "bottom", {
        get: function () {
            return this.bottom_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameHitBox.prototype, "left", {
        get: function () {
            return this.left_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameHitBox.prototype, "right", {
        get: function () {
            return this.right_;
        },
        enumerable: true,
        configurable: true
    });
    GameHitBox.prototype.hit = function (b0, b1) {
        return b0.x < b1.right &&
            b0.right > b1.x &&
            b0.y < b1.bottom &&
            b0.bottom > b1.y;
    };
    return GameHitBox;
}());
exports.default = GameHitBox;
},{}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameBG_1 = require("./GameBG");
var GameHitBox_1 = require("./GameHitBox");
var GameObj = /** @class */ (function () {
    function GameObj(scene3d, sprite3D, noumenon) {
        if (noumenon === void 0) { noumenon = false; }
        this.id = 0;
        this.scaleValue = 0;
        this.scaleDelta = 0;
        this._scale = new Laya.Vector3();
        this._pos = new Laya.Vector3(GameBG_1.default.width / 2, GameBG_1.default.height / 2, 0); //屏幕坐标
        this._pos2 = new Laya.Vector3(GameBG_1.default.width / 2, GameBG_1.default.height / 2 + 200, 0); //实际坐标
        this._translate = new Laya.Vector3(0, 0, 0);
        this.speed = 5;
        this.isMy = false;
        this.hbox = new GameHitBox_1.default(GameBG_1.default.mw, GameBG_1.default.mw);
        this.luck = true;
        var camera = GameObj.gameCamera;
        this.scene = scene3d;
        // GameObj.sp3d = sprite3D;
        // this.scene.addChild(GameObj.sp3d);
        // this.sp = Laya.Loader.getRes("h5/toonbat1/toonbat1.lh");
        //this.scene.addChild(Laya.Loader.getRes("h5/toonbat1/toonbat1.lh"));
        if (noumenon) {
            this.sp = this.scene.addChild(sprite3D);
        }
        else {
            this.sp = this.scene.addChild(Laya.Sprite3D.instantiate(sprite3D, null, false));
        }
        //this.sp = GameObj.sp3d;
        //this.sp.url = GameObj.sp3d.url;
        //this.sp["ur" + "l"] = GameObj.sp3d.url;
        //let layaMonkeySon = this.scene.addChild( Laya.Sprite3D.instantiate(sprite3D, null, false) ) as Laya.Sprite3D;
        //let layaMonkeySon = Laya.Loader.getRes("h5/toonbat1/toonbat1.lh");
        //layaMonkeySon.transform.position = this._translate;
        //this.scene.addChild(layaMonkeySon);
        var aniSprite3d = this.sp.getChildAt(0);
        this.ani = aniSprite3d;
        this.animator = aniSprite3d.getComponent(Laya.Animator);
        camera.convertScreenCoordToOrthographicCoord(this._pos, this._translate);
        this.sp.transform.position = this._translate;
        //this.sp.addComponent(new GameScirt());
        this.animator.play("Idle");
        //this.animator.play("Run");
        //console.log(this.sp);
        //console.log(GameObj.sp3d);
    }
    GameObj.prototype.play = function (ac) {
        if (this.luck) {
            this.luck = false;
            //this.animator
            //this.animator.getCurrentAnimatorPlayState().on(Laya.Event.COMPLETE,this,this.com);
            //this.ani.on(Laya.Event.COMPLETE,this,this.com)
            //this.animator
            //this.ani.on(Laya.Event.COMPLETE,this,this.com)
            this.animator.play(ac);
            Laya.stage.frameLoop(1, this, this.com);
        }
    };
    GameObj.prototype.com = function () {
        //console.log("com , com , com , com !!" + this.animator.getCurrentAnimatorPlayState().normalizedTime );
        if (this.animator.getCurrentAnimatorPlayState().normalizedTime >= 1) {
            this.animator.play("Idle");
            Laya.timer.clear(this, this.com);
            this.luck = true;
        }
    };
    GameObj.prototype.setIsMy = function (b) {
        this.isMy = b;
    };
    GameObj.prototype.rotation = function (n) {
        this.sp.transform.localRotationEulerY = n;
    };
    GameObj.prototype.setGameScale = function (size, fix) {
        if (fix === void 0) { fix = 1; }
        this._scale.x = this._scale.y = this._scale.z = Math.abs(size) / fix;
        this.sp.transform.localScale = this._scale;
    };
    GameObj.prototype.getPos2 = function () {
        return this._pos2;
    };
    GameObj.prototype.getPos0 = function () {
        return this._pos;
    };
    GameObj.prototype.getSp = function () {
        return this.sp;
    };
    GameObj.prototype.getSpeed = function () {
        return this.speed;
    };
    GameObj.prototype.move = function (n) {
        var vx = this.speed * Math.cos(n);
        var vy = this.speed * Math.sin(n);
        var dx = this._pos2.x + vx;
        var dy = this._pos2.y + vy;
        //if( GameBG.gameBG.isHit(dx,dy) ){//this._pos2.x , this._pos2.y
        var bx = GameBG_1.default.gameBG.isHit(dx, this._pos2.y);
        var by = GameBG_1.default.gameBG.isHit(this._pos2.x, dy);
        if (!bx && by) { //y方向被阻挡
            dy = this._pos2.y;
        }
        else if (bx && !by) { //x方向被阻挡
            dx = this._pos2.x;
        }
        //}
        if (GameBG_1.default.gameBG.isHit(dx, dy)) { //新坐标被阻挡
            return;
        }
        if (dx > GameBG_1.default.ww / 2 && dx < Laya.stage.width - GameBG_1.default.ww / 2) { //x方向场景范围
            this._pos2.x = dx;
        }
        if (dy > GameBG_1.default.ww / 2 && dy < GameBG_1.default.gameBG.getBgh()) { //y方向场景范围
            this._pos2.y = dy;
        }
        var dy = GameBG_1.default.height / 2 - this._pos2.y;
        if (this.isMy) {
            if (dy <= 0 && dy > Laya.stage.height - GameBG_1.default.gameBG.getBgh()) {
                GameBG_1.default.gameBG.y = dy;
            }
        }
        this.update();
    };
    GameObj.prototype.update = function () {
        this._pos.y = this._pos2.y + GameBG_1.default.gameBG.y;
        //console.log("this._pos.y " ,this._pos.y);
        this._pos.x = this._pos2.x;
        GameObj.gameCamera.convertScreenCoordToOrthographicCoord(this._pos, this._translate);
        this.sp.transform.position = this._translate;
        //console.log( " isok ", b);
        if (this.isMy) {
            GameBG_1.default.gameBG.updata(this._pos2.x, this._pos2.y);
        }
        this.hbox.setCenter(this._pos2.x, this._pos2.y);
    };
    GameObj.prototype.reset = function () {
        this.sp.transform.position = this._translate;
    };
    //敌方列表
    GameObj.earr = [];
    return GameObj;
}());
exports.default = GameObj;
},{"./GameBG":3,"./GameHitBox":4}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Sprite = Laya.Sprite;
var Rocker = /** @class */ (function (_super) {
    __extends(Rocker, _super);
    function Rocker() {
        var _this = _super.call(this) || this;
        _this.sp = new Sprite();
        _this.sp0 = new Sprite();
        _this.a = 0;
        _this.a3d = 0;
        _this.speed = 0;
        _this.sp.graphics.drawCircle(0, 0, 120, 0xff0000, 0xff0000);
        _this.sp.alpha = 0.5;
        _this.addChild(_this.sp);
        _this.sp0.graphics.drawCircle(0, 0, 60, 0x00ff00);
        _this.sp0.alpha = 0.5;
        _this.addChild(_this.sp0);
        return _this;
    }
    Rocker.prototype.reset = function () {
        this.sp0.x = 0;
        this.sp0.y = 0;
    };
    Rocker.prototype.getA = function () {
        return this.a;
    };
    Rocker.prototype.getA3d = function () {
        return this.a3d;
    };
    Rocker.prototype.getSpeed = function () {
        return this.speed;
    };
    Rocker.prototype.setSp0 = function (xx, yy) {
        var n = xx - this.x;
        var m = yy - this.y;
        this.a = Math.atan2(m, n);
        this.a3d = Math.atan2(this.y - yy, xx - this.x);
        var l = Math.sqrt(n * n + m * m);
        if (l > 4) {
            if (l > 80) {
                l = 80;
                this.sp0.x = Math.cos(this.a) * l;
                this.sp0.y = Math.sin(this.a) * l;
            }
            else {
                this.sp0.x = n;
                this.sp0.y = m;
            }
            this.speed = 1;
        }
        else {
            this.reset();
            this.speed = 0;
        }
    };
    Rocker.prototype.setSp1 = function (xx, yy) {
        var n = xx - this.x;
        var m = Math.abs(n);
        if (m > 35) {
            n = 35 * (m / n);
        }
        this.sp0.x = n;
        n = yy - this.y;
        m = Math.abs(n);
        if (m > 35) {
            n = 35 * (m / n);
        }
        this.sp0.y = n;
        //this.sp0.y = yy - this.y;
    };
    return Rocker;
}(Laya.Sprite));
exports.default = Rocker;
},{}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("./../ui/layaMaxUI");
var GameBG_1 = require("../game/GameBG");
var GameRocker_1 = require("../game/GameRocker");
var GameObj_1 = require("../game/GameObj");
/**
 * 本示例采用非脚本的方式实现，而使用继承页面基类，实现页面逻辑。在IDE里面设置场景的Runtime属性即可和场景进行关联
 * 相比脚本方式，继承式页面类，可以直接使用页面定义的属性（通过IDE内var属性定义），比如this.tipLbll，this.scoreLbl，具有代码提示效果
 * 建议：如果是页面级的逻辑，需要频繁访问页面内多个元素，使用继承式写法，如果是独立小模块，功能单一，建议用脚本方式实现，比如子弹脚本。
 */
var GameUI = /** @class */ (function (_super) {
    __extends(GameUI, _super);
    function GameUI() {
        var _this = _super.call(this) || this;
        _this.translateA = new Laya.Vector3(-0.2, 0, 0);
        _this.translateD = new Laya.Vector3(0.2, 0, 0);
        var bg = new GameBG_1.default();
        bg.drawR();
        Laya.stage.addChild(bg);
        _this.bg = bg;
        //添加3D场景
        _this.scene3d = Laya.stage.addChild(new Laya.Scene3D());
        //添加照相机
        _this.camera3d = (_this.scene3d.addChild(new Laya.Camera(0, 0.1, 100)));
        _this.camera3d.transform.translate(new Laya.Vector3(0, 3, 3));
        _this.camera3d.transform.rotate(new Laya.Vector3(-30, 0, 0), true, false);
        _this.camera3d.orthographic = true;
        //正交投影垂直矩阵尺寸
        _this.camera3d.orthographicVerticalSize = GameBG_1.default.orthographicVerticalSize;
        _this.camera3d.clearFlag = Laya.BaseCamera.CLEARFLAG_DEPTHONLY;
        GameObj_1.default.gameCamera = _this.camera3d;
        //Laya.Sprite3D.load("https://img.kuwan511.com/h5/LayaMonkey/LayaMonkey.lh",Laya.Handler.create(this,this.ok));
        Laya.Sprite3D.load("h5/toonbat1/toonbat1.lh", Laya.Handler.create(_this, _this.ok));
        return _this;
    }
    GameUI.prototype.ok = function (sp) {
        this.hero = new GameObj_1.default(this.scene3d, sp);
        this.hero.setIsMy(true);
        this.hero.setGameScale(1);
        this.camera3d.transform.lookAt(this.hero.getSp().transform.position, new Laya.Vector3(0, 1, 0));
        this.ro = new GameRocker_1.default();
        this.ro.x = Laya.stage.width / 2;
        this.ro.y = Laya.stage.height - 200;
        this.addChild(this.ro);
        Laya.MouseManager.multiTouchEnabled = false;
        Laya.stage.on(Laya.Event.MOUSE_DOWN, this, this.md);
        this.enemy = new GameObj_1.default(this.scene3d, sp, true);
        GameObj_1.default.earr.push(this.enemy);
        //Laya.stage.frameLoop(1,this,this.ai);
    };
    GameUI.prototype.md = function (eve) {
        Laya.stage.off(Laya.Event.MOUSE_DOWN, this, this.md);
        Laya.stage.on(Laya.Event.MOUSE_UP, this, this.up);
        var xx = Laya.stage.mouseX;
        var yy = Laya.stage.mouseY;
        this.ro.x = xx;
        this.ro.y = yy;
        Laya.stage.addChild(this.ro);
        Laya.stage.frameLoop(1, this, this.moves);
        Laya.stage.clearTimer(this, this.ai);
    };
    GameUI.prototype.up = function (eve) {
        Laya.stage.off(Laya.Event.MOUSE_UP, this, this.up);
        Laya.stage.on(Laya.Event.MOUSE_DOWN, this, this.md);
        if (this.ro && this.ro.parent) {
            this.ro.reset();
            this.ro.x = Laya.stage.width / 2;
            this.ro.y = Laya.stage.height - 200;
            //this.hero.reset();
        }
        Laya.stage.clearTimer(this, this.moves);
        Laya.stage.frameOnce(0, this, this.ai);
    };
    GameUI.prototype.moves = function () {
        var xx = Laya.stage.mouseX;
        var yy = Laya.stage.mouseY;
        var n;
        this.ro.setSp0(xx, yy);
        var speed = this.ro.getSpeed();
        if (speed > 0) {
            n = this.ro.getA3d();
            this.hero.rotation(n / Math.PI * 180 + 90);
            n = this.ro.getA();
            this.hero.move(n);
        }
        else {
        }
        this.enemy.update();
    };
    GameUI.prototype.ai = function () {
        if (this.hero) {
            this.hero.play("BiteAttack");
        }
    };
    return GameUI;
}(layaMaxUI_1.ui.test.TestSceneUI));
exports.default = GameUI;
},{"../game/GameBG":3,"../game/GameObj":5,"../game/GameRocker":6,"./../ui/layaMaxUI":8}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Scene = Laya.Scene;
var REG = Laya.ClassUtils.regClass;
var ui;
(function (ui) {
    var test;
    (function (test) {
        var TestSceneUI = /** @class */ (function (_super) {
            __extends(TestSceneUI, _super);
            function TestSceneUI() {
                return _super.call(this) || this;
            }
            TestSceneUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("test/TestScene");
            };
            return TestSceneUI;
        }(Scene));
        test.TestSceneUI = TestSceneUI;
        REG("ui.test.TestSceneUI", TestSceneUI);
    })(test = ui.test || (ui.test = {}));
})(ui = exports.ui || (exports.ui = {}));
},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
