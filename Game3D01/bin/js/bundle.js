var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var GameUI2_1 = require("./script/GameUI2");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("script/GameUI2.ts", GameUI2_1.default);
    };
    GameConfig.width = 640;
    GameConfig.height = 1136;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "none";
    GameConfig.alignV = "top";
    GameConfig.alignH = "left";
    GameConfig.startScene = "test/TestScene.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./script/GameUI2":14}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var GameBG_1 = require("./game/GameBG");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameBG_1.default.width, GameBG_1.default.height);
        else
            Laya.init(GameBG_1.default.width, GameBG_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        //Laya.stage.scaleMode = GameConfig.scaleMode;
        //console.log(Laya.Stage.SCALE_FIXED_WIDTH);
        Laya.stage.scaleMode = Laya.Stage.SCALE_FIXED_WIDTH;
        //Laya.stage.screenMode = GameConfig.screenMode;
        Laya.stage.screenMode = Laya.Stage.SCREEN_NONE;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        console.log(Laya.loader.getRes('bg/50.png'));
        Laya.loader.load("h5/mapConfig/1001.json", new Laya.Handler(this, this.onHandler));
    };
    Main.prototype.onHandler = function () {
        //加载IDE指定的场景
        var map = Laya.loader.getRes("h5/mapConfig/1001.json");
        // GameBG.hnum = map.rowNum;
        // GameBG.cj = Math.floor(GameBG.hnum / 2);
        GameBG_1.default.arr0 = map.arr;
        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene);
    };
    return Main;
}());
//激活启动类
new Main();
},{"./GameConfig":1,"./game/GameBG":5}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Sprite3D = Laya.Sprite3D;
var Game = /** @class */ (function () {
    function Game() {
        //Laya.Scene3D
    }
    //static ani:Laya.Animator;
    Game.updateMap = function () {
        if (Game.map0) {
            if (Game.bg) {
                Game.map0.x = Game.bg.x;
                Game.map0.y = Game.bg.y;
            }
        }
    };
    Game.Event_PlayStop = "Game.Event_PlayStop";
    Game.Event_Short = "Game.Event_Short";
    Game.Event_Hit = "Game.Event_Hit";
    Game.HeroArrows = [];
    //3d层
    Game.layer3d = new Sprite3D();
    Game.cameraY = 10;
    Game.sqrt3 = 10 * Math.sqrt(3);
    return Game;
}());
exports.default = Game;
},{}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GamePro_1 = require("./GamePro");
var Game_1 = require("./Game");
var GameMove_1 = require("./GameMove");
var GameHitBox_1 = require("./GameHitBox");
var GameProType_1 = require("./GameProType");
var GameAI = /** @class */ (function () {
    function GameAI() {
    }
    GameAI.JumpAttack = "JumpAttack";
    GameAI.ArrowAttack = "ArrowAttack";
    GameAI.Idle = "Idle";
    GameAI.Die = "Die";
    GameAI.Run = "Run";
    GameAI.SpinAttack = "SpinAttack";
    GameAI.TakeDamage = "TakeDamage";
    return GameAI;
}());
exports.GameAI = GameAI;
//巡逻&攻击
var MonsterAI1 = /** @class */ (function (_super) {
    __extends(MonsterAI1, _super);
    function MonsterAI1(pro) {
        var _this = _super.call(this) || this;
        _this.shooting = new Shooting();
        _this.pro = pro;
        _this.pro.play(GameAI.Idle);
        _this.shooting.attackCd = 3000;
        _this.shooting.at = 0.4;
        _this.pro.on(Game_1.default.Event_Short, _this, _this.shootAc);
        return _this;
    }
    MonsterAI1.prototype.shootAc = function (proType_) {
        this.shooting.short_arrow(10, this.pro.face3d, this.pro, proType_);
        this.shooting.short_arrow(10, this.pro.face3d + Math.PI / 6, this.pro, proType_);
        this.shooting.short_arrow(10, this.pro.face3d - Math.PI / 6, this.pro, proType_);
    };
    MonsterAI1.prototype.hit = function (pro) {
        if (this.pro.acstr == GameAI.Idle) {
            this.pro.play(GameAI.TakeDamage);
        }
    };
    MonsterAI1.prototype.exeAI = function (pro) {
        this.shooting.now = Laya.Browser.now();
        if (this.shooting.now >= this.shooting.st) {
            var a = GameHitBox_1.default.faceTo3D(this.pro.hbox, Game_1.default.hero.hbox);
            this.pro.rotation(a);
            this.shooting.st = this.shooting.now + this.shooting.attackCd;
            this.shooting.scd = 0;
            this.pro.play(GameAI.SpinAttack);
            if (this.shooting.at > 0) {
                Laya.stage.frameLoop(1, this, this.ac0);
            }
            else {
                this.ac0();
            }
            //this.shooting.short_arrow(40,this.pro.face3d,this.pro);
        }
        return false;
    };
    MonsterAI1.prototype.ac0 = function () {
        var pro = this.pro;
        if (pro.normalizedTime >= this.shooting.at) {
            if (this.shooting.scd == 0) {
                this.shooting.scd = 1;
                this.pro.event(Game_1.default.Event_Short, null);
                Laya.stage.timer.clear(this, this.ac0);
            }
        }
    };
    MonsterAI1.prototype.starAi = function () {
        this.shooting.now = Laya.Browser.now();
        this.shooting.st = this.shooting.now + this.shooting.attackCd;
    };
    MonsterAI1.prototype.stopAi = function () {
    };
    return MonsterAI1;
}(GameAI));
exports.MonsterAI1 = MonsterAI1;
var HeroArrowAI = /** @class */ (function (_super) {
    __extends(HeroArrowAI, _super);
    function HeroArrowAI() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.i = 0;
        return _this;
    }
    HeroArrowAI.prototype.hit = function (pro) {
        //throw new Error("Method not implemented.");
    };
    HeroArrowAI.prototype.exeAI = function (pro) {
        if (this.i == 0 && !pro.move2D(pro.face2d)) {
            this.i = 1;
            return false;
        }
        if (this.i > 0) {
            this.i++;
            if (this.i > 30) {
                pro.stopAi();
                if (pro.sp3d.parent) {
                    Game_1.default.layer3d.removeChild(pro.sp3d);
                    //Game.HeroArrows.push(pro);
                }
            }
        }
    };
    HeroArrowAI.prototype.starAi = function () {
        this.i = 0;
    };
    HeroArrowAI.prototype.stopAi = function () {
        this.i = 0;
    };
    return HeroArrowAI;
}(GameAI));
exports.HeroArrowAI = HeroArrowAI;
var HeroAI = /** @class */ (function (_super) {
    __extends(HeroAI, _super);
    function HeroAI() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.shootin = new Shooting();
        return _this;
    }
    HeroAI.prototype.hit = function (pro) {
        //throw new Error("Method not implemented.");
    };
    HeroAI.prototype.starAi = function () {
        Game_1.default.hero.on(Game_1.default.Event_Short, this, this.short);
        this.shootin.at = 0.35;
        this.shootin.now = Laya.Browser.now();
        //this.st = this.now;
    };
    HeroAI.prototype.short = function () {
        this.shootin.short_arrow(40, Game_1.default.hero.face3d, Game_1.default.hero, GameProType_1.default.HeroArrow);
        //this.short_arrow(40,Game.hero.face3d);        
        // this.short_arrow(40,Game.hero.face3d + Math.PI/6);
        // this.short_arrow(40,Game.hero.face3d - Math.PI/6);
        // this.short_arrow(40,Game.hero.face3d - Math.PI/2);
        // this.short_arrow(40,Game.hero.face3d + Math.PI/2);
        // this.short_arrow(40,Game.hero.face3d + Math.PI);
    };
    HeroAI.prototype.stopAi = function () {
        Game_1.default.hero.off(Game_1.default.Event_Short, this, this.short);
        Laya.stage.timer.clear(this, this.ac0);
    };
    HeroAI.prototype.exeAI = function (pro) {
        var hero = Game_1.default.hero;
        if (hero.acstr != GameAI.ArrowAttack) {
            this.shootin.now = Laya.Browser.now();
            if (this.shootin.now >= this.shootin.st) {
                pro.play(GameAI.ArrowAttack);
                Laya.stage.frameLoop(1, this, this.ac0);
                this.shootin.st = this.shootin.now + this.shootin.attackCd;
                this.shootin.scd = 0;
            }
        }
        return true;
    };
    HeroAI.prototype.ac0 = function () {
        var hero = Game_1.default.hero;
        if (hero.normalizedTime >= this.shootin.at) {
            if (hero.normalizedTime >= 1) {
                hero.play(GameAI.Idle);
                Laya.stage.timer.clear(this, this.ac0);
            }
            if (this.shootin.scd == 0) {
                this.shootin.scd = 1;
                Game_1.default.hero.event(Game_1.default.Event_Short, null);
            }
        }
    };
    return HeroAI;
}(GameAI));
exports.HeroAI = HeroAI;
var Shooting = /** @class */ (function () {
    function Shooting() {
        /**单次出手次数*/
        this.scd = 0;
        /**攻击CD*/
        this.attackCd = 1200;
        /**下次攻击时间*/
        this.st = 0;
        /**当前时间*/
        this.now = 0;
        /**攻击前摇时间*/
        this.at = 0;
    }
    Shooting.prototype.getBullet = function (proType_) {
        var gp;
        if (Game_1.default.HeroArrows.length <= 0) {
            gp = new GamePro_1.default(proType_);
            var bullet;
            bullet = (Laya.Sprite3D.instantiate(Game_1.default.a0.sp3d));
            gp.setSp3d(bullet);
        }
        else {
            gp = Game_1.default.HeroArrows.shift();
        }
        return gp;
    };
    Shooting.prototype.short_arrow = function (speed_, r_, pro, proType_) {
        var bo = this.getBullet(proType_);
        bo.sp3d.transform.localPositionY = 0.8;
        bo.setXY2D(pro.pos2.x, pro.pos2.z);
        bo.setSpeed(speed_);
        bo.rotation(r_);
        bo.setGameMove(new GameMove_1.ArrowGameMove());
        bo.setGameAi(new HeroArrowAI());
        bo.gamedata.bounce = pro.gamedata.bounce;
        Game_1.default.layer3d.addChild(bo.sp3d);
        bo.startAi();
    };
    Shooting.prototype.exeAI = function (pro) {
        this.now = Laya.Browser.now();
        if (this.now >= this.st) {
            //var a:number = GameHitBox.faceTo3D(pro.hbox ,Game.hero.hbox);
            //this.pro.rotation(a);
            this.st = this.now + this.attackCd;
            this.scd = 0;
            pro.play(GameAI.SpinAttack);
            if (this.at > 0) {
                Laya.stage.timer.frameOnce(this.at, this, this.ac0);
            }
            else {
                this.ac0();
            }
            //this.shooting.short_arrow(40,this.pro.face3d,this.pro);
        }
        return false;
    };
    Shooting.prototype.ac0 = function () {
    };
    return Shooting;
}());
exports.Shooting = Shooting;
},{"./Game":3,"./GameHitBox":7,"./GameMove":9,"./GamePro":10,"./GameProType":11}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Image = Laya.Image;
var Sprite = Laya.Sprite;
var Game_1 = require("./Game");
var GridType_1 = require("./bg/GridType");
//2d地图板块    
var GameBG = /** @class */ (function (_super) {
    __extends(GameBG, _super);
    function GameBG() {
        var _this = _super.call(this) || this;
        _this.bgh = 0;
        console.log(GameBG.wnum, Laya.stage.height, Laya.stage.width);
        //GameBG.orthographicVerticalSize = GameBG.wnum*Laya.stage.height/Laya.stage.width;
        GameBG.gameBG = _this;
        _this.mySp = new Sprite();
        _this.mySp.graphics.drawRect(0, 0, GameBG.mw, GameBG.mw, 0x00ff00);
        return _this;
    }
    GameBG.get3D = function (xx, yy) {
        if (!GameBG.v3d) {
            GameBG.v3d = new Laya.Vector3(0, 0.5, 0);
        }
        GameBG.v3d.x = (xx - GameBG.ci);
        GameBG.v3d.z = (yy - GameBG.cj) * 2;
        return GameBG.v3d;
    };
    GameBG.prototype.getBgh = function () {
        return this.bgh;
    };
    GameBG.prototype.isHit = function (dx, dy) {
        var dx0 = dx - GameBG.mw2;
        var dy0 = dy - GameBG.mw2;
        var b = false;
        for (var i = 0; i < GameBG.arrsp.length; i++) {
            var element = GameBG.arrsp[i];
            if (this.isHit_(dx0, dy0, element)) {
                b = true;
            }
        }
        return b;
    };
    GameBG.prototype.isHit_ = function (dx, dy, d2) {
        return dx < d2.x + GameBG.ww &&
            dx + GameBG.mw > d2.x &&
            dy < d2.y + GameBG.ww &&
            GameBG.mw + dy > d2.y;
    };
    GameBG.prototype.setZhuan = function (box) {
        //throw new Error("Method not implemented.");
    };
    GameBG.prototype.updata = function (x, y) {
        this.mySp.x = x - GameBG.mw2;
        this.mySp.y = y - GameBG.mw2;
    };
    GameBG.prototype.drawR = function () {
        var img;
        var ww = GameBG.ww;
        var k = 0;
        var sp;
        var gType = 0;
        for (var j = 0; j < GameBG.hnum; j++) {
            this.bgh += ww;
            for (var i = 0; i < GameBG.wnum + 1; i++) {
                img = new Image();
                img.skin = (k % 2 == 0) ? "bg/10.jpg" : "bg/11.jpg";
                this.addChild(img);
                img.x = i * ww; //- (ww/2);
                img.y = j * ww;
                gType = GameBG.arr0[k];
                // if(i==GameBG.ci && j==GameBG.cj){
                //     sp = new Sprite();
                //     sp.graphics.drawRect(0,0,GameBG.ww,GameBG.ww,0xff0000);
                //     sp.x = i * ww;
                //     sp.y = j * ww;
                //     this.addChild(sp);
                //     this.sp = sp;
                // }
                if (GridType_1.default.isRiverPoint(gType)) {
                    img.skin = 'bg/100.png';
                }
                else if (GridType_1.default.isThorn(gType)) {
                    img.skin = 'bg/500.png';
                }
                else if (GridType_1.default.isRiverScale9Grid(gType) || GridType_1.default.isRiverRow(gType) || GridType_1.default.isRiverCol(gType)) {
                    gType = Math.floor(gType / 100) * 100 + gType % 10;
                    img.skin = 'bg/' + gType + '.png';
                }
                k++;
            }
        }
        this.x = 0 - GameBG.ww2;
        this.y = (Laya.stage.height - (GameBG.hnum * GameBG.ww)) / 2;
        GameBG.cx = this.x;
        GameBG.cy = this.y;
        GameBG.mcx = ((GameBG.wnum + 1) * (GameBG.ww)) / 2 - GameBG.mw2;
        GameBG.mcy = (GameBG.hnum * GameBG.ww) / 2 - GameBG.mw2;
    };
    GameBG.prototype.drawR0 = function () {
        var img;
        var k = 0;
        var ww = GameBG.ww;
        //GameBG.orthographicVerticalSize
        var sp;
        for (var j = 0; j < GameBG.hnum; j++) {
            this.bgh += ww;
            for (var i = 0; i < GameBG.wnum + 1; i++) {
                img = new Image();
                img.skin = (k % 2 == 0) ? "comp/g256h.jpg" : "comp/g256l.jpg";
                this.addChild(img);
                img.x = i * ww - (ww / 2);
                img.y = j * ww;
                //console.log(i,j);
                if (k < GameBG.arr.length && GameBG.arr[k] == 1) {
                    sp = new Sprite();
                    sp.graphics.drawRect(0, 0, GameBG.ww, GameBG.ww, 0xff0000);
                    sp.x = i * ww - (ww / 2);
                    sp.y = j * ww;
                    this.addChild(sp);
                    this.sp = sp;
                    GameBG.arrsp.push(sp);
                }
                k++;
            }
        }
        this.addChild(this.mySp);
        // this.bgh = Laya.stage.height - this.bgh;
    };
    GameBG.prototype.updateY = function () {
        var bgy = GameBG.cy - Game_1.default.hero.pos2.z;
        if (bgy <= 0 && bgy >= Laya.stage.height - Game_1.default.bg.getBgh()) {
            //移动2D背景板
            Game_1.default.bg.y = bgy;
            //摄像机跟随主角
            Game_1.default.camera.transform.localPositionZ = Game_1.default.sqrt3 + Game_1.default.hero.z;
            Game_1.default.updateMap();
        }
    };
    /**地图恒星格子数*/
    GameBG.wnum = 12;
    /**地图纵向格子数*/
    GameBG.hnum = 49;
    /**舞台宽度*/
    GameBG.width = 750;
    //static width:number = 768;
    /**舞台高度*/
    GameBG.height = 1334;
    //static height:number = 1024;
    /**地形的碰撞方块尺寸*/
    GameBG.ww = GameBG.width / GameBG.wnum;
    /**1/2 地形的碰撞方块尺寸*/
    GameBG.ww2 = GameBG.ww / 2;
    //主角的碰撞方块尺寸比例
    GameBG.fw = GameBG.ww * 0.4;
    //主角的碰撞方块尺寸
    GameBG.mw = GameBG.ww - GameBG.fw;
    //1/2 主角的碰撞方块尺寸
    GameBG.mw2 = GameBG.mw / 2;
    //正交相机纵向尺寸
    GameBG.orthographicVerticalSize = GameBG.wnum * GameBG.height / GameBG.width;
    //地图居中格子i
    GameBG.ci = 6;
    //地图居中格子j
    GameBG.cj = 24;
    GameBG.arrsp = [];
    // static arr0:number[] = [
    //     0,0,0,0,0,0,0,0,0,0,0,0,0,
    //     0,0,0,0,0,0,0,0,0,0,0,0,0,
    //     0,2,2,0,0,0,0,0,0,0,3,3,0,
    //     0,4,0,0,0,0,0,0,0,0,0,5,0,
    //     0,0,0,0,0,0,0,0,0,0,0,0,0,
    //     0,0,0,0,0,0,0,0,0,0,0,0,0,
    //     0,0,0,0,0,0,0,0,0,0,0,0,0,
    //     0,0,0,0,0,0,0,0,0,0,0,0,0,
    //     0,0,0,0,0,0,0,0,0,0,0,0,0,   
    //     0,0,0,0,0,0,0,0,0,0,0,0,0,
    //     0,0,0,0,0,0,0,0,0,0,0,0,0,
    //     0,0,0,0,0,0,0,0,0,0,0,0,0,
    //     0,6,0,0,0,0,0,0,0,0,0,7,0,
    //     0,8,8,0,0,0,0,0,0,0,9,9,0        
    // ];
    GameBG.arr0 = [];
    GameBG.arr = [
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 3, 1, 0,
        0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 1, 3, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 4, 0, 0, 5, 0, 0, 6, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 7, 1, 1, 1, 1, 1, 7, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 8, 0, 0, 5, 0, 0, 9, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 10, 1, 0, 0, 0, 0, 0, 0, 0, 11, 1, 0,
        0, 1, 10, 0, 0, 0, 0, 0, 0, 0, 1, 11, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    ];
    GameBG.arr1 = [
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,
        0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,
        0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    ];
    return GameBG;
}(Laya.Sprite));
exports.default = GameBG;
},{"./Game":3,"./bg/GridType":13}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameData = /** @class */ (function () {
    function GameData() {
        this.bounce = 0;
        this.proType = 0;
    }
    GameData.prototype.initData = function () {
        this.bounce = 0;
    };
    return GameData;
}());
exports.default = GameData;
},{}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameHitBox = /** @class */ (function () {
    function GameHitBox(ww, hh) {
        this.x_ = 0;
        this.y_ = 0;
        this.ww_ = 2;
        this.hh_ = 2;
        this.cx_ = 1;
        this.cy_ = 1;
        this.h2_ = 1;
        this.w2_ = 1;
        this.top_ = 0;
        this.left_ = 0;
        this.right_ = 0;
        this.bottom_ = 0;
        this.ww_ = ww;
        this.hh_ = hh;
        this.h2_ = this.hh_ / 2;
        this.w2_ = this.ww_ / 2;
        this.setXY(0, 0);
    }
    GameHitBox.prototype.setVV = function (x0, y0, vx, vy) {
        var ax = Math.abs(vx);
        var ay = Math.abs(vy);
        if (ax > 0 && ay > 0) {
            this.ww_ = ax;
            this.hh_ = ay;
            this.h2_ = this.hh_ / 2;
            this.w2_ = this.ww_ / 2;
            this.setXY(Math.min(x0, x0 + vx), Math.min(y0, y0 + vy));
        }
        else if (ax == 0 && ay > 0) {
            this.ww_ = 2;
            this.hh_ = ay;
            this.h2_ = this.hh_ / 2;
            this.w2_ = this.ww_ / 2;
            this.setXY(x0 - 1, Math.min(y0, y0 + vy));
        }
        else if (ax > 0 && ay == 0) {
            this.ww_ = ax;
            this.hh_ = 2;
            this.h2_ = this.hh_ / 2;
            this.w2_ = this.ww_ / 2;
            this.setXY(Math.min(x0, x0 + vx), y0 - 1);
        }
        else {
            this.ww_ = 2;
            this.hh_ = 2;
            this.h2_ = this.hh_ / 2;
            this.w2_ = this.ww_ / 2;
            this.setXY(x0 - 1, y0 - 1);
        }
        return this;
    };
    Object.defineProperty(GameHitBox.prototype, "ww", {
        get: function () {
            return this.ww_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameHitBox.prototype, "hh", {
        get: function () {
            return this.hh_;
        },
        enumerable: true,
        configurable: true
    });
    GameHitBox.prototype.setXY = function (xx, yy) {
        this.x_ = xx;
        this.y_ = yy;
        this.cx_ = this.x_ + this.w2_;
        this.cy_ = this.y_ + this.h2_;
        this.update();
    };
    GameHitBox.prototype.setCenter = function (xx, yy) {
        this.cx_ = xx;
        this.cy_ = yy;
        this.x_ = this.cx_ - this.w2_;
        this.y_ = this.cy_ - this.h2_;
        this.update();
    };
    GameHitBox.prototype.setRq = function (x, y, ww, hh) {
        this.ww_ = ww;
        this.hh_ = hh;
        this.h2_ = this.hh_ / 2;
        this.w2_ = this.ww_ / 2;
        this.setXY(x, y);
        return this;
    };
    GameHitBox.prototype.update = function () {
        this.top_ = this.y_;
        this.left_ = this.x_;
        this.bottom_ = this.y_ + this.hh_;
        this.right_ = this.x_ + this.ww_;
    };
    Object.defineProperty(GameHitBox.prototype, "cx", {
        get: function () {
            return this.cx_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameHitBox.prototype, "cy", {
        get: function () {
            return this.cy_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameHitBox.prototype, "x", {
        get: function () {
            return this.x_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameHitBox.prototype, "y", {
        get: function () {
            return this.y_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameHitBox.prototype, "top", {
        //top left right bottom
        get: function () {
            return this.top_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameHitBox.prototype, "bottom", {
        get: function () {
            return this.bottom_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameHitBox.prototype, "left", {
        get: function () {
            return this.left_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameHitBox.prototype, "right", {
        get: function () {
            return this.right_;
        },
        enumerable: true,
        configurable: true
    });
    GameHitBox.prototype.hit = function (b0, b1) {
        return b0.x < b1.right &&
            b0.right > b1.x &&
            b0.y < b1.bottom &&
            b0.bottom > b1.y;
    };
    GameHitBox.faceTo = function (my, target) {
        var xx = target.cx - my.cx;
        var yy = target.cy - my.cy;
        return Math.atan2(yy, xx);
    };
    GameHitBox.faceTo3D = function (my, target) {
        var xx = target.cx - my.cx;
        var yy = my.cy - target.cy;
        return Math.atan2(yy, xx);
    };
    return GameHitBox;
}());
exports.default = GameHitBox;
},{}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameBG_1 = require("./GameBG");
var GameHitBox_1 = require("./GameHitBox");
var Game_1 = require("./Game");
var GridType_1 = require("./bg/GridType");
//地图逻辑层
var GameMap0 = /** @class */ (function (_super) {
    __extends(GameMap0, _super);
    function GameMap0() {
        var _this = _super.call(this) || this;
        //public laodings:Laya.Sprite;
        _this.map = {};
        _this.Amap = {};
        _this.futureBox = new GameHitBox_1.default(1, 1);
        _this.fcount = 0;
        _this.sp = new Laya.Point();
        _this.ep = new Laya.Point();
        _this.ballistic = new Laya.Sprite();
        //this.laodings  = new Laya.Sprite();
        _this.arrhb = new GameHitBox_1.default(2, 2);
        return _this;
    }
    GameMap0.prototype.drawMap = function () {
        var hb = null;
        this.Aharr = [];
        this.Wharr = [];
        this.Eharr = [];
        this.Hharr = [];
        this.map = {};
        this.Amap = {};
        this.graphics.clear();
        hb = new GameHitBox_1.default(GameBG_1.default.ww * (GameBG_1.default.wnum + 1), GameBG_1.default.ww);
        hb.setXY(0, 0);
        this.Wharr.push(hb);
        this.Aharr.push(hb);
        hb = new GameHitBox_1.default(GameBG_1.default.ww, GameBG_1.default.ww * (GameBG_1.default.hnum - 2));
        hb.setXY(0, GameBG_1.default.ww * 2);
        this.Wharr.push(hb);
        this.Aharr.push(hb);
        hb = new GameHitBox_1.default(GameBG_1.default.ww, GameBG_1.default.ww * (GameBG_1.default.hnum - 2));
        hb.setXY(GameBG_1.default.ww * GameBG_1.default.wnum, GameBG_1.default.ww * 2);
        this.Wharr.push(hb);
        this.Aharr.push(hb);
        var k = 0;
        for (var j = 0; j < GameBG_1.default.hnum; j++) {
            for (var i = 0; i < GameBG_1.default.wnum + 1; i++) {
                var ww = GameBG_1.default.ww;
                var x = i * ww; //- (ww/2);
                var y = j * ww;
                if (k < GameBG_1.default.arr0.length && (GridType_1.default.isWall(GameBG_1.default.arr0[k])
                    || GridType_1.default.isRiverPoint(GameBG_1.default.arr0[k])
                    || GridType_1.default.isRiverScale9Grid(GameBG_1.default.arr0[k])
                    || GridType_1.default.isRiverRow(GameBG_1.default.arr0[k])
                    || GridType_1.default.isRiverCol(GameBG_1.default.arr0[k])
                    || GridType_1.default.isRiverPoint(GameBG_1.default.arr0[k])
                    // || GridType.isThorn(GameBG.arr0[k])  
                    || GridType_1.default.isRiverScale9Grid(GameBG_1.default.arr0[k]))) {
                    var key = GameBG_1.default.arr0[k];
                    if (this.map[key]) {
                        hb = this.map[key];
                        hb.setVV(hb.x, hb.y, x + GameBG_1.default.ww - hb.x, y + GameBG_1.default.ww - hb.y);
                    }
                    else {
                        hb = new GameHitBox_1.default(GameBG_1.default.ww, GameBG_1.default.ww);
                        hb.setXY(x, y);
                        this.Wharr.push(hb);
                        this.map[key] = hb;
                    }
                }
                k++;
            }
            if (k >= GameBG_1.default.arr0.length) {
                break;
            }
        }
        k = 0;
        for (var j = 0; j < GameBG_1.default.hnum; j++) {
            for (var i = 0; i < GameBG_1.default.wnum + 1; i++) {
                var ww = GameBG_1.default.ww;
                var x = i * ww; //- (ww/2);
                var y = j * ww;
                if (k < GameBG_1.default.arr0.length && (GridType_1.default.isWall(GameBG_1.default.arr0[k]))) {
                    var key = GameBG_1.default.arr0[k];
                    if (this.Amap[key]) {
                        hb = this.Amap[key];
                        hb.setVV(hb.x, hb.y, x + GameBG_1.default.ww - hb.x, y + GameBG_1.default.ww - hb.y);
                    }
                    else {
                        hb = new GameHitBox_1.default(GameBG_1.default.ww, GameBG_1.default.ww);
                        hb.setXY(x, y);
                        this.Aharr.push(hb);
                        this.Amap[key] = hb;
                    }
                }
                k++;
            }
            if (k >= GameBG_1.default.arr0.length) {
                break;
            }
        }
        hb = new GameHitBox_1.default(GameBG_1.default.ww * (GameBG_1.default.wnum - 1), GameBG_1.default.ww);
        hb.setXY(GameBG_1.default.ww, GameBG_1.default.ww * (j + 1));
        this.Wharr.push(hb);
        this.Aharr.push(hb);
        //传送门左侧
        hb = new GameHitBox_1.default(GameBG_1.default.ww * 5, GameBG_1.default.ww);
        hb.setXY(0, GameBG_1.default.ww);
        this.Wharr.push(hb);
        this.Aharr.push(hb);
        //传送门右侧
        hb = new GameHitBox_1.default(GameBG_1.default.ww * 5, GameBG_1.default.ww);
        hb.setXY(GameBG_1.default.ww * 8, GameBG_1.default.ww);
        this.Wharr.push(hb);
        this.Aharr.push(hb);
        for (var i = 0; i < this.Wharr.length; i++) {
            hb = this.Wharr[i];
            this.graphics.drawRect(hb.left, hb.top, hb.ww, hb.hh, null, 0xff0000);
        }
        this.alpha = 1;
        this.addChild(this.ballistic);
        //this.addChild(this.laodings);
    };
    GameMap0.prototype.chechHitHero_ = function (vx, vy) {
        return this.chechHit(Game_1.default.hero, vx, vy);
    };
    GameMap0.prototype.chechHit = function (gamepro, vx, vy) {
        var hb = gamepro.hbox;
        var fb = this.futureBox;
        fb.setRq(hb.x + vx, hb.y + vy, hb.ww, hb.hh);
        for (var i = 0; i < this.Wharr.length; i++) {
            var ehb = this.Wharr[i];
            if (ehb.hit(ehb, fb)) {
                return true;
            }
        }
        return false;
    };
    GameMap0.prototype.chechHit_arr = function (thb, thbArr) {
        var ehb = null;
        for (var i = 0; i < thbArr.length; i++) {
            ehb = thbArr[i];
            if (ehb.hit(ehb, thb)) {
                return ehb;
            }
        }
        return null;
    };
    GameMap0.prototype.drawBallistic = function (heron) {
        Game_1.default.hero.hbox.setXY(Game_1.default.hero.sp2d.x, Game_1.default.hero.sp2d.y);
        var vx = Math.cos(heron) * GameBG_1.default.mw2;
        var vy = Math.sin(heron) * GameBG_1.default.mw2;
        var x0 = Game_1.default.hero.hbox.cx;
        var y0 = Game_1.default.hero.hbox.cy;
        this.sp.x = x0;
        this.sp.y = y0;
        this.fcount = 0;
        var g = this.ballistic.graphics;
        g.clear();
        for (var i = 0; i < 6000; i++) {
            this.arrhb.setVV(x0, y0, vx, vy);
            var ebh; // = this.chechHit_arr(this.arrhb,Game.e0.);
            if (Game_1.default.e0.hbox.hit(Game_1.default.e0.hbox, this.arrhb)) {
                ebh = Game_1.default.e0.hbox;
                g.drawRect(this.arrhb.x, this.arrhb.y, this.arrhb.ww, this.arrhb.hh, null, "#ff0000");
                g.drawRect(ebh.x, ebh.y, ebh.ww, ebh.hh, "#00ff00", "#00ff00");
                g.drawLine(this.sp.x, this.sp.y, x0, y0, "#ff0000");
                break;
            }
            ebh = this.chechHit_arr(this.arrhb, this.Wharr);
            if (ebh) {
                g.drawRect(this.arrhb.x, this.arrhb.y, this.arrhb.ww, this.arrhb.hh, null, "#ff0000");
                g.drawRect(ebh.x, ebh.y, ebh.ww, ebh.hh, "#00ff00", "#00ff00");
                g.drawLine(this.sp.x, this.sp.y, x0, y0, "#ff0000");
                this.sp.x = x0;
                this.sp.y = y0;
                if (this.fcount < 4) {
                    if (!this.chechHit_arr(this.arrhb.setVV(x0, y0, -1 * vx, vy), this.Wharr)) {
                        vx = -1 * vx;
                        this.fcount++;
                    }
                    else if (!this.chechHit_arr(this.arrhb.setVV(x0, y0, vx, -1 * vy), this.Wharr)) {
                        vy = -1 * vy;
                        this.fcount++;
                    }
                    else {
                        break;
                    }
                }
                else {
                    break;
                }
            }
            else {
                g.drawRect(this.arrhb.x, this.arrhb.y, this.arrhb.ww, this.arrhb.hh, null, "#0000ff");
                x0 += vx;
                y0 += vy;
            }
        }
    };
    return GameMap0;
}(Laya.Sprite));
exports.default = GameMap0;
},{"./Game":3,"./GameBG":5,"./GameHitBox":7,"./bg/GridType":13}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("./Game");
var GameHitBox_1 = require("./GameHitBox");
var GameProType_1 = require("./GameProType");
var SimpleGameMove = /** @class */ (function () {
    function SimpleGameMove() {
    }
    SimpleGameMove.prototype.move2d = function (n, pro, speed) {
        //pro.rotation(n);
        pro.setSpeed(speed);
        var vx = pro.speed * Math.cos(n);
        var vz = pro.speed * Math.sin(n);
        pro.setXY2D(pro.pos2.x + vx, pro.pos2.z + vz);
        return true;
    };
    return SimpleGameMove;
}());
exports.SimpleGameMove = SimpleGameMove;
var ArrowGameMove = /** @class */ (function () {
    function ArrowGameMove() {
        this.future = new GameHitBox_1.default(2, 2);
    }
    ArrowGameMove.prototype.move2d = function (n, pro, speed) {
        //pro.rotation(n);
        pro.setSpeed(speed);
        if (pro.speed <= 0)
            return;
        var vx = pro.speed * Math.cos(n);
        var vz = pro.speed * Math.sin(n);
        var x0 = pro.hbox.cx;
        var y0 = pro.hbox.cy;
        this.future.setVV(x0, y0, vx, vz);
        var ebh;
        if (pro.gamedata.proType == GameProType_1.default.HeroArrow) {
            ebh = Game_1.default.map0.chechHit_arr(this.future, Game_1.default.map0.Eharr);
        }
        else {
            ebh = Game_1.default.map0.chechHit_arr(this.future, Game_1.default.map0.Hharr);
        }
        if (ebh) {
            pro.setXY2D(pro.pos2.x + vx, pro.pos2.z + vz);
            pro.setSpeed(0);
            if (ebh.linkPro_) {
                ebh.linkPro_.event(Game_1.default.Event_Hit, pro);
            }
            return false;
        }
        var hits = Game_1.default.map0.Aharr;
        ebh = Game_1.default.map0.chechHit_arr(this.future, hits);
        if (ebh) {
            if (pro.gamedata.bounce <= 0) {
                pro.setXY2D(pro.pos2.x + vx, pro.pos2.z + vz);
                pro.setSpeed(0);
                return false;
            }
            pro.gamedata.bounce--;
            if (!Game_1.default.map0.chechHit_arr(this.future.setVV(x0, y0, -1 * vx, vz), hits)) {
                vx = -1 * vx;
                //this.fcount++;
            }
            else if (!Game_1.default.map0.chechHit_arr(this.future.setVV(x0, y0, vx, -1 * vz), hits)) {
                vz = -1 * vz;
                //this.fcount++;
            }
            else {
                return false;
            }
            //this.facen2d_ = (2*Math.PI - n);
            n = 2 * Math.PI - Math.atan2(vz, vx);
            pro.rotation(n);
        }
        pro.setXY2D(pro.pos2.x + vx, pro.pos2.z + vz);
        return true;
    };
    return ArrowGameMove;
}());
exports.ArrowGameMove = ArrowGameMove;
var PlaneGameMove = /** @class */ (function () {
    function PlaneGameMove() {
    }
    PlaneGameMove.prototype.move2d = function (n, pro, speed) {
        var vx = pro.speed * Math.cos(n);
        var vz = pro.speed * Math.sin(n);
        if (Game_1.default.map0.chechHit(pro, vx, vz)) {
            if (vz != 0 && Game_1.default.map0.chechHit(pro, vx, 0)) {
                vx = 0;
                vz = (vz < 0 ? -1 : 1) * pro.speed;
            }
            if (vx != 0 && Game_1.default.map0.chechHit(pro, 0, vz)) {
                vz = 0;
                vx = (vx < 0 ? -1 : 1) * pro.speed;
            }
            if (Game_1.default.map0.chechHit(pro, vx, vz)) {
                return false;
            }
        }
        pro.setXY2D(pro.pos2.x + vx, pro.pos2.z + vz);
        return true;
    };
    return PlaneGameMove;
}());
exports.PlaneGameMove = PlaneGameMove;
},{"./Game":3,"./GameHitBox":7,"./GameProType":11}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameHitBox_1 = require("./GameHitBox");
var GameBG_1 = require("./GameBG");
var Game_1 = require("./Game");
var GameAI_1 = require("./GameAI");
var GameData_1 = require("./GameData");
var GamePro = /** @class */ (function (_super) {
    __extends(GamePro, _super);
    function GamePro(proType_) {
        var _this = _super.call(this) || this;
        _this.speed_ = 5;
        _this._pos2 = new Laya.Vector3(0, 0, 0);
        _this.acstr_ = "";
        _this.gamedata_ = new GameData_1.default();
        _this.gamedata_.proType = proType_;
        return _this;
    }
    GamePro.prototype.setSp3d = function (sp) {
        this.sp3d_ = sp;
        this.hbox_ = new GameHitBox_1.default(GameBG_1.default.mw, GameBG_1.default.mw);
        this.hbox_.linkPro_ = this;
        this.hbox_.setCenter(GameBG_1.default.mcx, GameBG_1.default.mcy);
        var aniSprite3d = sp.getChildAt(0);
        if (aniSprite3d) {
            this.ani_ = aniSprite3d.getComponent(Laya.Animator);
        }
        this.on(Game_1.default.Event_Hit, this, this.hit);
    };
    GamePro.prototype.hit = function (array) {
        var a = array[0];
        if (this.gameAI) {
            this.gameAI.hit(a);
        }
    };
    Object.defineProperty(GamePro.prototype, "acstr", {
        get: function () {
            return this.acstr_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GamePro.prototype, "face2d", {
        get: function () {
            return this.facen2d_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GamePro.prototype, "face3d", {
        get: function () {
            return this.facen3d_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GamePro.prototype, "speed", {
        get: function () {
            return this.speed_;
        },
        enumerable: true,
        configurable: true
    });
    GamePro.prototype.setSpeed = function (speed) {
        this.speed_ = speed;
    };
    GamePro.prototype.setGameMove = function (gamemove) {
        this.movef = gamemove;
    };
    GamePro.prototype.setGameAi = function (gameAI) {
        this.gameAI = gameAI;
        return this.gameAI;
    };
    Object.defineProperty(GamePro.prototype, "hbox", {
        get: function () {
            if (!this.hbox_) {
                this.hbox_ = new GameHitBox_1.default(GameBG_1.default.mw, GameBG_1.default.mw);
                this.hbox_.setXY(GameBG_1.default.mcx, GameBG_1.default.mcy);
            }
            return this.hbox_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GamePro.prototype, "sp2d", {
        get: function () {
            if (!this.sp2d_) {
                this.sp2d_ = new Laya.Sprite();
                this.sp2d.graphics.drawRect(0, 0, GameBG_1.default.mw, GameBG_1.default.mw, null, 0xff0000);
                this.sp2d.x = this.hbox.x;
                this.sp2d.y = this.hbox.y;
            }
            return this.sp2d_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GamePro.prototype, "sp3d", {
        get: function () {
            return this.sp3d_;
        },
        enumerable: true,
        configurable: true
    });
    GamePro.prototype.play = function (actionstr) {
        this.acstr_ = actionstr;
        this.ani_.play(actionstr);
        //console.log( this.acstr , " : " , this.ani_.getCurrentAnimatorPlayState);
        if (this.acstr != GameAI_1.GameAI.Run && this.acstr != GameAI_1.GameAI.Idle) {
            Laya.stage.frameLoop(1, this, this.ac0);
        }
        else {
            Laya.stage.timer.clear(this, this.ac0);
        }
    };
    GamePro.prototype.ac0 = function () {
        if (this.normalizedTime >= 1) {
            var str = this.acstr_;
            Laya.stage.timer.clear(this, this.ac0);
            this.play(GameAI_1.GameAI.Idle);
            this.event(Game_1.default.Event_PlayStop, str);
        }
    };
    Object.defineProperty(GamePro.prototype, "normalizedTime", {
        get: function () {
            return this.ani_.getCurrentAnimatorPlayState().normalizedTime;
        },
        enumerable: true,
        configurable: true
    });
    GamePro.prototype.rotation = function (n) {
        //this.sp3d_.transform.localRotationEulerY = (n+Math.PI/2)/Math.PI*180;
        var nn = n;
        nn = Math.atan2(Math.sin(nn) * 2, Math.cos(nn));
        this.sp3d_.transform.localRotationEulerY = (nn + Math.PI / 2) / Math.PI * 180;
        this.facen3d_ = n;
        this.facen2d_ = (2 * Math.PI - n);
    };
    Object.defineProperty(GamePro.prototype, "pos2", {
        get: function () {
            return this._pos2;
        },
        enumerable: true,
        configurable: true
    });
    GamePro.prototype.pos2To3d = function () {
        //2D转3D坐标 给主角模型
        this.sp3d_.transform.localPositionX = this._pos2.x / GameBG_1.default.ww;
        this.sp3d_.transform.localPositionZ = this._pos2.z * 2 / GameBG_1.default.ww;
        this.hbox_.setXY(GameBG_1.default.mcx + this._pos2.x, GameBG_1.default.mcy + this._pos2.z);
        if (this.sp2d_) {
            this.sp2d_.x = this.hbox_.x;
            this.sp2d_.y = this.hbox_.y;
        }
    };
    Object.defineProperty(GamePro.prototype, "z", {
        get: function () {
            return this.sp3d_.transform.localPositionZ;
        },
        enumerable: true,
        configurable: true
    });
    GamePro.prototype.move2D = function (n, hd) {
        if (hd === void 0) { hd = true; }
        this.moven2d_ = n;
        if (this.movef) {
            return this.movef.move2d(n, this, this.speed);
        }
        return false;
    };
    GamePro.prototype.setXY2D = function (xx, yy) {
        //2D移动计算
        this.pos2.x = xx;
        this.pos2.z = yy;
        this.pos2To3d();
    };
    GamePro.prototype.setXY2DBox = function (xx, yy) {
        //2D移动计算
        this.hbox_.setXY(xx, yy);
        //(this.pp.x-pro.hbox.ww/2-GameBG.mcx,this.pp.y-GameBG.mcy-pro.hbox.ww/2)
        this.pos2.x = this.hbox_.x - GameBG_1.default.mcx;
        this.pos2.z = this.hbox_.y - GameBG_1.default.mcy;
        this.pos2To3d();
    };
    GamePro.prototype.startAi = function () {
        Laya.stage.frameLoop(1, this, this.ai);
        if (this.gameAI) {
            this.gameAI.starAi();
        }
    };
    GamePro.prototype.stopAi = function () {
        Laya.stage.timer.clear(this, this.ai);
        if (this.gameAI) {
            this.gameAI.stopAi();
        }
    };
    GamePro.prototype.ai = function () {
        if (this.gameAI) {
            this.gameAI.exeAI(this);
        }
    };
    Object.defineProperty(GamePro.prototype, "gamedata", {
        get: function () {
            return this.gamedata_;
        },
        enumerable: true,
        configurable: true
    });
    return GamePro;
}(Laya.EventDispatcher));
exports.default = GamePro;
},{"./Game":3,"./GameAI":4,"./GameBG":5,"./GameData":6,"./GameHitBox":7}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameProType = /** @class */ (function () {
    function GameProType() {
    }
    /**主角对象*/
    GameProType.Hero = 9999;
    /**蓝色石头怪*/
    GameProType.RockGolem_Blue = 8000;
    /**主角箭*/
    GameProType.HeroArrow = 800;
    /**石头怪石头*/
    GameProType.Rock = 801;
    return GameProType;
}());
exports.default = GameProType;
},{}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Sprite = Laya.Sprite;
var Rocker = /** @class */ (function (_super) {
    __extends(Rocker, _super);
    function Rocker() {
        var _this = _super.call(this) || this;
        _this.sp = new Sprite();
        _this.sp0 = new Sprite();
        _this.a = 0;
        _this.a3d = 0;
        _this.speed = 0;
        _this.sp.graphics.drawCircle(0, 0, 120, 0xff0000, 0xff0000);
        _this.sp.alpha = 0.5;
        _this.addChild(_this.sp);
        _this.sp0.graphics.drawCircle(0, 0, 60, 0x00ff00);
        _this.sp0.alpha = 0.5;
        _this.addChild(_this.sp0);
        return _this;
    }
    Rocker.prototype.reset = function () {
        this.sp0.x = 0;
        this.sp0.y = 0;
    };
    Rocker.prototype.getA = function () {
        return this.a;
    };
    Rocker.prototype.getA3d = function () {
        return this.a3d;
    };
    Rocker.prototype.getSpeed = function () {
        return this.speed;
    };
    Rocker.prototype.setSp0 = function (xx, yy) {
        var n = xx - this.x;
        var m = yy - this.y;
        this.a = Math.atan2(m, n);
        this.a3d = Math.atan2(this.y - yy, xx - this.x); //+Math.PI/2;
        var l = Math.sqrt(n * n + m * m);
        if (l > 4) {
            if (l > 80) {
                l = 80;
                this.sp0.x = Math.cos(this.a) * l;
                this.sp0.y = Math.sin(this.a) * l;
            }
            else {
                this.sp0.x = n;
                this.sp0.y = m;
            }
            this.speed = 1;
        }
        else {
            this.reset();
            this.speed = 0;
        }
    };
    Rocker.prototype.setSp1 = function (xx, yy) {
        var n = xx - this.x;
        var m = Math.abs(n);
        if (m > 35) {
            n = 35 * (m / n);
        }
        this.sp0.x = n;
        n = yy - this.y;
        m = Math.abs(n);
        if (m > 35) {
            n = 35 * (m / n);
        }
        this.sp0.y = n;
        //this.sp0.y = yy - this.y;
    };
    return Rocker;
}(Laya.Sprite));
exports.default = Rocker;
},{}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GridType = /** @class */ (function () {
    function GridType() {
    }
    /**是否是水点 */
    GridType.isRiverPoint = function (type) {
        return type >= 100 && type < 200;
    };
    /**是否是九宫格水 */
    GridType.isRiverScale9Grid = function (type) {
        return type > 200 && type < 300;
    };
    /**是否是横水 */
    GridType.isRiverRow = function (type) {
        return type > 400 && type < 500;
    };
    /**是否是纵水 */
    GridType.isRiverCol = function (type) {
        return type > 300 && type < 400;
    };
    /**是否是陷进 */
    GridType.isThorn = function (type) {
        return type >= 500 && type < 600;
    };
    GridType.isWall = function (type) {
        return type >= 600 && type < 700 || type == 1;
    };
    return GridType;
}());
exports.default = GridType;
},{}],14:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("./../ui/layaMaxUI");
var Game_1 = require("../game/Game");
var GameBG_1 = require("../game/GameBG");
var GameRocker_1 = require("../game/GameRocker");
var GameMap0_1 = require("../game/GameMap0");
var GameHitBox_1 = require("../game/GameHitBox");
var GamePro_1 = require("../game/GamePro");
var GameMove_1 = require("../game/GameMove");
var GameAI_1 = require("../game/GameAI");
var GridType_1 = require("../game/bg/GridType");
var GameProType_1 = require("../game/GameProType");
var GameUI2 = /** @class */ (function (_super) {
    __extends(GameUI2, _super);
    function GameUI2() {
        var _this = _super.call(this) || this;
        var bg = new GameBG_1.default();
        //bg.y = 1.5 * GameBG.ww;
        //bg.alpha = 0;
        Laya.stage.addChild(bg);
        Game_1.default.bg = bg;
        //添加3D场景
        var scene = Laya.stage.addChild(new Laya.Scene3D());
        scene.addChild(Game_1.default.layer3d);
        Game_1.default.scene3d = scene;
        //添加照相机
        var camera = (scene.addChild(new Laya.Camera(0, 0.1, 100)));
        // camera.transform.translate(new Laya.Vector3(0, 10, 10));
        camera.transform.translate(new Laya.Vector3(0, 10, 10 * Math.sqrt(3)));
        //camera.transform.rotate(new Laya.Vector3(-90, 0, 0), true, false);
        camera.transform.rotate(new Laya.Vector3(-30, 0, 0), true, false);
        camera.orthographic = true;
        Game_1.default.camera = camera;
        //正交投影垂直矩阵尺寸
        GameBG_1.default.orthographicVerticalSize = GameBG_1.default.wnum * Laya.stage.height / Laya.stage.width;
        camera.orthographicVerticalSize = GameBG_1.default.orthographicVerticalSize;
        camera.clearFlag = Laya.BaseCamera.CLEARFLAG_DEPTHONLY;
        //添加方向光
        var directionLight = scene.addChild(new Laya.DirectionLight());
        directionLight.color = new Laya.Vector3(0.6, 0.6, 0.6);
        directionLight.transform.worldMatrix.setForward(new Laya.Vector3(1, -1, 0));
        //添加自定义模型
        var material = new Laya.BlinnPhongMaterial();
        Game_1.default.material_blinn = material;
        Laya.Texture2D.load("res/layabox.png", Laya.Handler.create(null, function (tex) {
            material.albedoTexture = tex;
        }));
        var k = 0;
        for (var j = 0; j < GameBG_1.default.hnum; j++) {
            for (var i = 0; i < GameBG_1.default.wnum + 1; i++) {
                //console.log(i,j);
                if (k < GameBG_1.default.arr0.length && GridType_1.default.isWall(GameBG_1.default.arr0[k])) {
                    var v3 = GameBG_1.default.get3D(i, j);
                    var box = _this.getBox();
                    box.transform.translate(v3);
                }
                k++;
            }
        }
        //屏幕中心线
        // var sp2d:Laya.Sprite = new Laya.Sprite();
        // Laya.stage.addChild(sp2d);
        // sp2d.graphics.drawLine(Laya.stage.width/2,0,Laya.stage.width/2,Laya.stage.height,"#ff0000");
        // sp2d.graphics.drawLine(0,Laya.stage.height/2,Laya.stage.width,Laya.stage.height/2,"#ff0000");
        var map0 = new GameMap0_1.default();
        map0.drawMap();
        // Laya.stage.addChild(map0);        
        Game_1.default.map0 = map0;
        Game_1.default.updateMap();
        Laya.loader.create(["h5/ToonRockGolem/ToonSkeletons.lh", "h5/ToonSkeletons/ToonSkeletons.lh", "h5/ArrowBlue/ToonSkeletons.lh"], Laya.Handler.create(_this, _this.onComplete));
        return _this;
    }
    GameUI2.prototype.getBox = function () {
        if (Game_1.default.box == null) {
            Game_1.default.box = new Laya.MeshSprite3D(Laya.PrimitiveMesh.createBox(1, 1, 2));
        }
        var box;
        box = Game_1.default.layer3d.addChild(Laya.Sprite3D.instantiate(Game_1.default.box));
        box.meshRenderer.material = Game_1.default.material_blinn;
        return box;
    };
    GameUI2.prototype.onComplete = function () {
        var sp = Laya.loader.getRes("h5/ToonRockGolem/ToonSkeletons.lh");
        Game_1.default.bg.drawR();
        Game_1.default.layer3d.addChild(sp);
        var gpro = new GamePro_1.default(GameProType_1.default.RockGolem_Blue);
        gpro.setSp3d(sp);
        Game_1.default.e0 = gpro;
        Game_1.default.map0.Eharr.push(gpro.hbox);
        Game_1.default.map0.addChild(Game_1.default.e0.sp2d);
        sp = Laya.loader.getRes("h5/ArrowBlue/ToonSkeletons.lh");
        //Game.layer3d.addChild(sp);
        var gpro = new GamePro_1.default(GameProType_1.default.HeroArrow);
        gpro.setSp3d(sp);
        Game_1.default.a0 = gpro;
        sp = Laya.loader.getRes("h5/ToonSkeletons/ToonSkeletons.lh");
        //得到原始Sprite3D
        //this.sp3d = sp;        
        Game_1.default.layer3d.addChild(sp);
        //sp.transform.scale = new Laya.Vector3(1.5,1.5,1.5);
        //sp.transform.translate(new Laya.Vector3(0, 0, 2));
        Game_1.default.hero = new GamePro_1.default(GameProType_1.default.Hero);
        Game_1.default.hero.setSp3d(sp);
        //Game.hero.transform.localPositionY = 2; 
        //Laya.stage.on(Laya.Event.KEY_DOWN,this,this.kd);
        Game_1.default.ro = new GameRocker_1.default();
        Game_1.default.ro.x = Laya.stage.width / 2;
        Game_1.default.ro.y = Laya.stage.height - 200;
        this.addChild(Game_1.default.ro);
        Laya.MouseManager.multiTouchEnabled = false;
        Laya.stage.on(Laya.Event.MOUSE_DOWN, this, this.md);
        Game_1.default.hero.play("Idle");
        Game_1.default.map0.addChild(Game_1.default.hero.sp2d);
        Game_1.default.hero.setGameMove(new GameMove_1.PlaneGameMove());
        Game_1.default.hero.setGameAi(new GameAI_1.HeroAI());
        Game_1.default.e0.setXY2DBox(GameBG_1.default.ww * 6, (GameBG_1.default.arr0.length / 13 - 5) * GameBG_1.default.ww);
        Game_1.default.hero.setXY2DBox(GameBG_1.default.ww * 6, (GameBG_1.default.arr0.length / 13 - 1) * GameBG_1.default.ww);
        Game_1.default.bg.updateY();
        Game_1.default.e0.setGameAi(new GameAI_1.MonsterAI1(Game_1.default.e0));
        Game_1.default.e0.startAi();
        Game_1.default.map0.Hharr.push(Game_1.default.hero.hbox);
        //Game.hero.on(Game.Event_Short,this,this.short)
    };
    GameUI2.prototype.md = function (eve) {
        Game_1.default.hero.stopAi();
        Game_1.default.hero.play("Run");
        //Game.hero.rotation(Game.hero.face3d);
        Laya.stage.off(Laya.Event.MOUSE_DOWN, this, this.md);
        Laya.stage.on(Laya.Event.MOUSE_UP, this, this.up);
        var xx = Laya.stage.mouseX;
        var yy = Laya.stage.mouseY;
        Game_1.default.ro.x = xx;
        Game_1.default.ro.y = yy;
        Laya.stage.addChild(Game_1.default.ro);
        Laya.stage.frameLoop(1, this, this.moves);
        //Laya.stage.clearTimer(this,this.ai);
    };
    GameUI2.prototype.up = function (eve) {
        Game_1.default.hero.play("Idle");
        var a = GameHitBox_1.default.faceTo3D(Game_1.default.hero.hbox, Game_1.default.e0.hbox);
        Game_1.default.hero.rotation(a);
        //this.heron = GameHitBox.faceTo(Game.hero.hbox , Game.e0.hbox);
        Laya.stage.off(Laya.Event.MOUSE_UP, this, this.up);
        Laya.stage.on(Laya.Event.MOUSE_DOWN, this, this.md);
        if (Game_1.default.ro && Game_1.default.ro.parent) {
            Game_1.default.ro.reset();
            Game_1.default.ro.x = Laya.stage.width / 2;
            Game_1.default.ro.y = Laya.stage.height - 200;
            //this.hero.reset();
        }
        Laya.stage.clearTimer(this, this.moves);
        Game_1.default.hero.startAi();
        Game_1.default.map0.drawBallistic(Game_1.default.hero.face2d);
        //Laya.stage.frameOnce(0,this,this.ai);
        // //bo.setGameMove(new BulletGameMove(5,bo.face2d,bo));
        // bo.startAi();
    };
    GameUI2.prototype.move2d = function (n) {
        Game_1.default.hero.move2D(n);
        Game_1.default.bg.updateY();
    };
    GameUI2.prototype.moves = function () {
        var xx = Laya.stage.mouseX;
        var yy = Laya.stage.mouseY;
        var n;
        Game_1.default.ro.setSp0(xx, yy);
        var speed = Game_1.default.ro.getSpeed();
        n = Game_1.default.ro.getA3d();
        if (speed > 0) {
            Game_1.default.hero.rotation(n);
            this.move2d(Game_1.default.ro.getA());
        }
        else {
        }
    };
    return GameUI2;
}(layaMaxUI_1.ui.test.TestSceneUI));
exports.default = GameUI2;
},{"../game/Game":3,"../game/GameAI":4,"../game/GameBG":5,"../game/GameHitBox":7,"../game/GameMap0":8,"../game/GameMove":9,"../game/GamePro":10,"../game/GameProType":11,"../game/GameRocker":12,"../game/bg/GridType":13,"./../ui/layaMaxUI":15}],15:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Scene = Laya.Scene;
var REG = Laya.ClassUtils.regClass;
var ui;
(function (ui) {
    var test;
    (function (test) {
        var TestSceneUI = /** @class */ (function (_super) {
            __extends(TestSceneUI, _super);
            function TestSceneUI() {
                return _super.call(this) || this;
            }
            TestSceneUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("test/TestScene");
            };
            return TestSceneUI;
        }(Scene));
        test.TestSceneUI = TestSceneUI;
        REG("ui.test.TestSceneUI", TestSceneUI);
    })(test = ui.test || (ui.test = {}));
})(ui = exports.ui || (exports.ui = {}));
},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
