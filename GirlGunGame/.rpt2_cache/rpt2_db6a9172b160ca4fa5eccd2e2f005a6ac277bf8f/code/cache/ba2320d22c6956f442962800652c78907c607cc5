{
  "code": "var Point = Laya.Point;\r\nexport default class MaoLineTest {\r\n    static intersectionP(u1, u2, v1, v2) {\r\n        var ret = new Point(u1.x, u1.y);\r\n        var t = ((u1.x - v1.x) * (v1.y - v2.y) - (u1.y - v1.y) * (v1.x - v2.x)) / ((u1.x - u2.x) * (v1.y - v2.y) - (u1.y - u2.y) * (v1.x - v2.x));\r\n        ret.x += (u2.x - u1.x) * t;\r\n        ret.y += (u2.y - u1.y) * t;\r\n        return ret;\r\n    }\r\n    static intersectionMao(u, v) {\r\n        return MaoLineTest.intersectionP(u.p0, u.p1, v.p0, v.p1);\r\n    }\r\n    static simpleLineTestXY(l1p1x, l1p1y, l1p2x, l1p2y, l2p1x, l2p1y, l2p2x, l2p2y, u, v) {\r\n        var line1p1;\r\n        line1p1 = (l1p2x - l1p1x) * (l2p1y - l1p1y) - (l2p1x - l1p1x) * (l1p2y - l1p1y);\r\n        var line1p2;\r\n        line1p2 = (l1p2x - l1p1x) * (l2p2y - l1p1y) - (l2p2x - l1p1x) * (l1p2y - l1p1y);\r\n        var line2p1;\r\n        line2p1 = (l2p2x - l2p1x) * (l1p1y - l2p1y) - (l1p1x - l2p1x) * (l2p2y - l2p1y);\r\n        var line2p2;\r\n        line2p2 = (l2p2x - l2p1x) * (l1p2y - l2p1y) - (l1p2x - l2p1x) * (l2p2y - l2p1y);\r\n        if ((line1p1 * line1p2 <= 0) && (line2p1 * line2p2 <= 0)) {\r\n            return MaoLineTest.intersectionMao(u, v);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    static simpleLineTestMao(u, v) {\r\n        return MaoLineTest.simpleLineTestXY(u.p0.x, u.p0.y, u.p1.x, u.p1.y, v.p0.x, v.p0.y, v.p1.x, v.p1.y, u, v);\r\n    }\r\n}\r\n",
  "references": [
    "D:/gitworker/GirlGunGame/src/game/MaoLineData.ts"
  ]
}
