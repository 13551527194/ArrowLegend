{
  "code": "import GameBG from \"../../../game/GameBG\";\r\nimport App from \"../../../core/App\";\r\nimport SysMap from \"../../sys/SysMap\";\r\nimport SysEnemy from \"../../sys/SysEnemy\";\r\nimport GridType from \"../../../game/bg/GridType\";\r\nimport SysBullet from \"../../sys/SysBullet\";\r\nimport { ui } from \"../../../ui/layaMaxUI\";\r\nimport Game from \"../../../game/Game\";\r\nimport MonsterShader from \"../../../game/player/MonsterShader\";\r\nimport CoinEffect from \"../../../game/effect/CoinEffect\";\r\nimport Session from \"../../Session\";\r\nimport DieEffect from \"../../../game/effect/DieEffect\";\r\nimport MonsterBoomEffect from \"../../../game/effect/MonsterBoomEffect\";\r\nimport Coin from \"../../../game/player/Coin\";\r\nimport GameCube from \"./GameCube\";\r\nimport SysChapter from \"../../sys/SysChapter\";\r\nexport default class BattleLoader {\r\n    constructor() {\r\n        this.chapterId = 0;\r\n        this._index = 1;\r\n        this.resAry = [];\r\n        this.pubResAry = [];\r\n        this.isLoadPub = false;\r\n        this._isHeroLoaded = false;\r\n        this._isMonsterLoaded = false;\r\n        this.monsterRes = {};\r\n        this.cubeRes = {};\r\n        this._configId = 0;\r\n        this.monsterId = 0;\r\n        this.curBoTimes = 0;\r\n        this.maxBoTimes = 0;\r\n        this.bgRes = {};\r\n    }\r\n    get index() {\r\n        return this._index;\r\n    }\r\n    set index(v) {\r\n        this._index = v;\r\n    }\r\n    get mapId() {\r\n        return this._mapId;\r\n    }\r\n    onRelease() {\r\n    }\r\n    clearMonster(isOpenDoor = false) {\r\n        for (let key in MonsterShader.map) {\r\n            let shader = MonsterShader.map[key];\r\n            if (shader) {\r\n                delete MonsterShader.map[key];\r\n            }\r\n        }\r\n        for (let key in this.monsterRes) {\r\n            if (key != '') {\r\n                let sp = Laya.loader.getRes(key);\r\n                if (sp) {\r\n                    sp.destroy(true);\r\n                }\r\n            }\r\n        }\r\n        if (!isOpenDoor) {\r\n            for (let key in this.cubeRes) {\r\n                if (key != '') {\r\n                    let sp = Laya.loader.getRes(key);\r\n                    if (sp) {\r\n                        sp.destroy(true);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        let tagArr = [DieEffect.TAG, Coin.TAG, MonsterBoomEffect.TAG];\r\n        for (let key in Game.poolTagArr) {\r\n            tagArr.push(key);\r\n        }\r\n        for (let i = 0; i < tagArr.length; i++) {\r\n            let arr = Laya.Pool.getPoolBySign(tagArr[i]);\r\n            for (let j = 0; j < arr.length; j++) {\r\n                let sp3d = arr[j].sp3d;\r\n                if (sp3d) {\r\n                    sp3d.destroy(true);\r\n                    sp3d = null;\r\n                }\r\n                arr[j] = null;\r\n            }\r\n            if (arr.length > 0) {\r\n                Laya.Pool.clearBySign(tagArr[i]);\r\n            }\r\n        }\r\n        Laya.Resource.destroyUnusedResources();\r\n    }\r\n    load(res) {\r\n        GameCube.recover();\r\n        this.clearMonster();\r\n        this.continueRes = res;\r\n        Game.scenneM.battle && Game.scenneM.battle.up(null);\r\n        Game.ro && Game.ro.removeSelf();\r\n        if (!this._loading) {\r\n            this._loading = new ui.test.LoadingUI();\r\n            this._loading.mouseEnabled = false;\r\n        }\r\n        App.layerManager.alertLayer.addChild(this._loading);\r\n        Game.bg && Game.bg.clear();\r\n        this._loading.txt.text = \"0%\";\r\n        if (this.continueRes) {\r\n            this.chapterId = this.continueRes.chapterId;\r\n            this._mapId = this.continueRes.mapId;\r\n            this._index = this.continueRes.index;\r\n            this._configId = this.continueRes.configId;\r\n            Game.battleCoins = this.continueRes.coins;\r\n        }\r\n        else {\r\n            let maxCeng = SysMap.getTotal(this.chapterId);\r\n            if (this._index > maxCeng) {\r\n                this._index = 1;\r\n            }\r\n            this._mapId = this.chapterId * 1000 + this._index;\r\n            let configId;\r\n            if (Session.homeData.isGuide) {\r\n                configId = 100000;\r\n            }\r\n            else {\r\n                this.sysMap = SysMap.getData(this.chapterId, this._index);\r\n                this.curBoTimes = 0;\r\n                this.maxBoTimes = this.sysMap.numEnemy;\r\n                this.monsterGroup = this.sysMap.enemyGroup.split(\",\");\r\n                let configArr = this.sysMap.stageGroup.split(',');\r\n                configId = Number(configArr[Math.floor(configArr.length * Math.random())]);\r\n            }\r\n            this._configId = configId;\r\n        }\r\n        App.sdkManager.log(this._configId);\r\n        console.log(\"当前地图\", this._mapId, this._configId);\r\n        Laya.loader.load(\"h5/mapConfig/\" + this._configId + \".json\", new Laya.Handler(this, this.loadBg));\r\n    }\r\n    preload() {\r\n        let arr = [\r\n            \"res/atlas/shengli.atlas\",\r\n            \"res/atlas/texiao/jiaxue.atlas\",\r\n            \"res/atlas/bg.atlas\",\r\n            \"res/atlas/jiesuan.atlas\"\r\n        ];\r\n        Laya.loader.load(arr, Laya.Handler.create(this, this.onCompletePre));\r\n    }\r\n    onCompletePre() {\r\n        console.log(\"2D资源加载完毕\");\r\n        this.loadHeroRes();\r\n    }\r\n    loadHeroRes() {\r\n        let pubRes = [\r\n            \"h5/effects/door/monster.lh\",\r\n            \"h5/effects/foot/hero.lh\", \"h5/effects/head/monster.lh\", \"h5/bulletsEffect/20000/monster.lh\",\r\n            \"h5/bullets/skill/5009/monster.lh\", \"h5/bullets/20000/monster.lh\"\r\n        ];\r\n        pubRes.push(\"h5/hero/\" + Session.heroData.nowRoleId + \"/hero.lh\");\r\n        if (Session.homeData.isGuide) {\r\n            pubRes.push(\"h5/effects/guide/monster.lh\");\r\n        }\r\n        Laya.loader.create(pubRes, Laya.Handler.create(this, this.onCompleteHero), new Laya.Handler(this, this.onProgress));\r\n    }\r\n    onCompleteHero() {\r\n        console.log(\"主角所需资源加载完毕\");\r\n        this._isHeroLoaded = true;\r\n        this.allLoadCom();\r\n    }\r\n    loadBg() {\r\n        let map = Laya.loader.getRes(\"h5/mapConfig/\" + this._configId + \".json\");\r\n        GameBG.MAP_ROW = map.rowNum;\r\n        GameBG.MAP_COL = map.colNum;\r\n        GameBG.MAP_ROW2 = Math.floor(GameBG.MAP_ROW * 0.5);\r\n        GameBG.MAP_COL2 = Math.floor(GameBG.MAP_COL * 0.5);\r\n        GameBG.bgId = map.bgId;\r\n        GameBG.bgWW = map.bgWidth;\r\n        GameBG.bgHH = map.bgHeight;\r\n        GameBG.bgHHReal = map.bgHeight;\r\n        GameBG.bgCellWidth = map.cellWidth;\r\n        if (GameBG.bgHH < 1700) {\r\n            GameBG.bgHH = 1700;\r\n        }\r\n        GameBG.arr0 = map.arr;\r\n        let bgType = this.chapterId;\r\n        bgType = Math.max(bgType, 1);\r\n        GameBG.BG_TYPE_NUM = bgType;\r\n        GameBG.BG_TYPE = \"map_\" + bgType;\r\n        Laya.loader.clearRes(\"h5/mapConfig/\" + this._configId + \".json\");\r\n        this.bgRes[GameBG.BG_TYPE_NUM] = GameBG.BG_TYPE_NUM;\r\n        Laya.loader.load(\"res/atlas/map_\" + bgType + \".atlas\", new Laya.Handler(this, this.onLoadMonster));\r\n    }\r\n    onLoadMonster() {\r\n        this.resAry.length = 0;\r\n        this.monsterRes = {};\r\n        this.cubeRes = {};\r\n        let res;\r\n        let k = 0;\r\n        for (let j = 0; j < GameBG.MAP_ROW; j++) {\r\n            for (let i = 0; i < GameBG.MAP_COL; i++) {\r\n                let type = GameBG.arr0[k];\r\n                if (k < GameBG.arr0.length) {\r\n                    if (this.continueRes == null && GridType.isMonster(type)) {\r\n                        this.getMonsterRes(type);\r\n                    }\r\n                    else if (GridType.isCube(type)) {\r\n                        this.getSceneRes(type);\r\n                    }\r\n                }\r\n                k++;\r\n            }\r\n        }\r\n        for (let key in this.monsterRes) {\r\n            if (key != '') {\r\n                this.resAry.push(key);\r\n            }\r\n        }\r\n        if (this.resAry.length > 0) {\r\n            let pubResAry = [\"h5/effects/monsterDie/monster.lh\", \"h5/coins/1001/monster.lh\", \"h5/effects/boom/monster.lh\"];\r\n            for (let j = 0; j < pubResAry.length; j++) {\r\n                res = pubResAry[j];\r\n                this.monsterRes[res] = res;\r\n                this.resAry.push(res);\r\n            }\r\n        }\r\n        if (this.index == SysChapter.dropIndex) {\r\n            let key;\r\n            if (SysChapter.blueNum > 0) {\r\n                key = \"h5/coins/1002/monster.lh\";\r\n                this.monsterRes[key] = key;\r\n                this.resAry.push(key);\r\n            }\r\n            else if (SysChapter.redNum > 0) {\r\n                key = \"h5/coins/1003/monster.lh\";\r\n                this.monsterRes[key] = key;\r\n                this.resAry.push(key);\r\n            }\r\n        }\r\n        if (this.index == SysChapter.heartIndex) {\r\n            if (SysChapter.heartNum > 0) {\r\n                res = \"h5/coins/1004/monster.lh\";\r\n                this.monsterRes[res] = res;\r\n                this.resAry.push(res);\r\n            }\r\n        }\r\n        for (let key in this.cubeRes) {\r\n            if (key != '') {\r\n                this.resAry.push(key);\r\n            }\r\n        }\r\n        if (Laya.loader.getRes(\"h5/hero/\" + Session.heroData.nowRoleId + \"/hero.lh\") == null) {\r\n            this.resAry.push(\"h5/hero/\" + Session.heroData.nowRoleId + \"/hero.lh\");\r\n        }\r\n        this._isMonsterLoaded = false;\r\n        console.log('资源列表', this.resAry);\r\n        if (this.resAry.length > 0) {\r\n            Laya.loader.create(this.resAry, Laya.Handler.create(this, this.onCompleteMonster), new Laya.Handler(this, this.onProgress));\r\n        }\r\n        else {\r\n            this.onCompleteMonster();\r\n        }\r\n    }\r\n    getSceneRes(type) {\r\n        let cubeType = GameCube.getType(type);\r\n        let res = \"h5/wall/\" + cubeType + \"/monster.lh\";\r\n        this.cubeRes[res] = res;\r\n    }\r\n    onCompleteMonster() {\r\n        console.log(\"怪物所需资源加载完毕\");\r\n        this._isMonsterLoaded = true;\r\n        this.allLoadCom();\r\n    }\r\n    onProgress(value) {\r\n        if (!this._loading) {\r\n            return;\r\n        }\r\n        value = Math.ceil(value * 100);\r\n        value = Math.min(value, 100);\r\n        this._loading.txt.text = value + \"%\";\r\n    }\r\n    allLoadCom() {\r\n        if (this._isHeroLoaded && this._isMonsterLoaded) {\r\n            console.log(\"所有资源都加载完毕\");\r\n            CoinEffect.coinsAry.length = 0;\r\n            CoinEffect.hearAry.length = 0;\r\n            Game.scenneM.showBattle();\r\n            Game.scenneM.battle.init();\r\n            this._loading.removeSelf();\r\n        }\r\n    }\r\n    getMonsterRes(id) {\r\n        console.log(\"怪物id\", id);\r\n        let res = '';\r\n        let sysEnemy = App.tableManager.getDataByNameAndId(SysEnemy.NAME, id);\r\n        res = \"h5/monsters/\" + sysEnemy.enemymode + \"/monster.lh\";\r\n        this.monsterRes[res] = res;\r\n        if (sysEnemy.normalAttack > 0) {\r\n            let sysBullet = App.tableManager.getDataByNameAndId(SysBullet.NAME, sysEnemy.normalAttack);\r\n            if (sysBullet.bulletMode > 0) {\r\n                res = \"h5/bullets/\" + sysBullet.bulletMode + \"/monster.lh\";\r\n                this.monsterRes[res] = res;\r\n            }\r\n            if (sysBullet.boomEffect > 0) {\r\n                res = \"h5/bulletsEffect/\" + sysBullet.boomEffect + \"/monster.lh\";\r\n                this.monsterRes[res] = res;\r\n            }\r\n        }\r\n        if (sysEnemy.skillId.length > 0 && sysEnemy.skillId != '0') {\r\n            var skillarr = sysEnemy.skillId.split(',');\r\n            for (var m = 0; m < skillarr.length; m++) {\r\n                let id = Number(skillarr[m]);\r\n                if (id > 0) {\r\n                    let sysBullet = App.tableManager.getDataByNameAndId(SysBullet.NAME, Number(id));\r\n                    if (sysBullet.bulletMode > 0) {\r\n                        res = \"h5/bullets/\" + sysBullet.bulletMode + \"/monster.lh\";\r\n                        this.monsterRes[res] = res;\r\n                    }\r\n                    if (sysBullet.boomEffect > 0) {\r\n                        res = \"h5/bulletsEffect/\" + sysBullet.boomEffect + \"/monster.lh\";\r\n                        this.monsterRes[res] = res;\r\n                    }\r\n                    if (sysBullet.callInfo != '0') {\r\n                        let infoAry = sysBullet.callInfo.split('|');\r\n                        for (let i = 0; i < infoAry.length; i++) {\r\n                            let info = infoAry[i].split(',');\r\n                            if (info.length == 3) {\r\n                                let monsterId = Number(info[0]);\r\n                                this.getMonsterRes(monsterId);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
  "references": [
    "D:/gitworker/GirlGunGame/src/game/GameBG.ts",
    "D:/gitworker/GirlGunGame/src/GameConfig.ts",
    "D:/gitworker/GirlGunGame/src/core/App.ts",
    "D:/gitworker/GirlGunGame/src/main/sys/SysMap.ts",
    "D:/gitworker/GirlGunGame/src/main/sys/SysEnemy.ts",
    "D:/gitworker/GirlGunGame/src/game/bg/GridType.ts",
    "D:/gitworker/GirlGunGame/src/main/sys/SysBullet.ts",
    "D:/gitworker/GirlGunGame/src/ui/layaMaxUI.ts",
    "D:/gitworker/GirlGunGame/src/main/scene/battle/BattleScene.ts",
    "D:/gitworker/GirlGunGame/src/game/Game.ts",
    "D:/gitworker/GirlGunGame/src/game/player/MonsterShader.ts",
    "D:/gitworker/GirlGunGame/src/game/effect/CoinEffect.ts",
    "D:/gitworker/GirlGunGame/src/main/Session.ts",
    "D:/gitworker/GirlGunGame/src/game/effect/BoomEffect.ts",
    "D:/gitworker/GirlGunGame/src/game/effect/DieEffect.ts",
    "D:/gitworker/GirlGunGame/src/game/effect/MonsterBoomEffect.ts",
    "D:/gitworker/GirlGunGame/src/game/player/Coin.ts",
    "D:/gitworker/GirlGunGame/src/game/player/Monster.ts",
    "D:/gitworker/GirlGunGame/src/game/player/Hero.ts",
    "D:/gitworker/GirlGunGame/src/game/ai/GameAI.ts",
    "D:/gitworker/GirlGunGame/src/main/scene/battle/GameFence.ts",
    "D:/gitworker/GirlGunGame/src/main/GameEvent.ts",
    "D:/gitworker/GirlGunGame/src/game/player/MonsterBullet.ts",
    "D:/gitworker/GirlGunGame/src/main/scene/battle/GameCube.ts",
    "D:/gitworker/GirlGunGame/src/main/sys/SysChapter.ts",
    "D:/gitworker/GirlGunGame/src/game/effect/HitEffect.ts"
  ]
}
