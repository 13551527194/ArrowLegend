{
  "code": "export default class CustomShaderff00 extends Laya.BaseMaterial {\r\n    static get ff00() {\r\n        if (!CustomShaderff00.ff00_) {\r\n            return new CustomShaderff00;\r\n        }\r\n        return CustomShaderff00.ff00_;\r\n    }\r\n    constructor() {\r\n        super();\r\n        if (!CustomShaderff00.ff00_) {\r\n            this.initShader();\r\n            this.setShaderName(\"CustomShaderff00\");\r\n            CustomShaderff00.ff00_ = this;\r\n        }\r\n        else {\r\n            this.setShaderName(\"CustomShaderff00\");\r\n        }\r\n    }\r\n    initShader() {\r\n        let attributeMap = {\r\n            'a_Position': Laya.VertexMesh.MESH_POSITION0\r\n        };\r\n        let uniformMap = {\r\n            'u_MvpMatrix': Laya.Shader3D.PERIOD_SPRITE\r\n        };\r\n        let vs = `\n            attribute vec4 a_Position;\n            uniform mat4 u_MvpMatrix;\n            void main()\n            {\n            gl_Position = u_MvpMatrix * a_Position;\n            }`;\r\n        let ps = `\n            #ifdef FSHIGHPRECISION\n            precision highp float;\n            #else\n            precision mediump float;\n            #endif            \n            void main()\n            {           \n            gl_FragColor=vec4(1.0,0.0,0.0,1.0);\n            }`;\r\n        let CustomShaderff00 = Laya.Shader3D.add(\"CustomShaderff00\");\r\n        let subShader = new Laya.SubShader(attributeMap, uniformMap);\r\n        CustomShaderff00.addSubShader(subShader);\r\n        subShader.addShaderPass(vs, ps);\r\n    }\r\n}\r\n",
  "references": []
}
