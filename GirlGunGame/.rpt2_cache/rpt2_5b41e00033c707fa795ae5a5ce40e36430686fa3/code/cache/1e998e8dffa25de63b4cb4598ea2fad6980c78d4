{
  "code": "import GameBG from \"./GameBG\";\r\nimport GameHitBox from \"./GameHitBox\";\r\nimport Game from \"./Game\";\r\nimport GridType from \"./bg/GridType\";\r\nimport MaoLineData from \"./MaoLineData\";\r\nimport BattleFlagID from \"../main/scene/BattleFlagID\";\r\nimport Session from \"../main/Session\";\r\nimport GameEvent from \"../main/GameEvent\";\r\nimport App from \"../core/App\";\r\nexport default class GameMap0 extends Laya.Sprite {\r\n    constructor() {\r\n        super();\r\n        this.info = {};\r\n        this.endRowNum = 0;\r\n        this.map = {};\r\n        this.Amap = {};\r\n        this.futureBox = new GameHitBox(1, 1);\r\n        this._isNext = false;\r\n        this._isNpc = false;\r\n        this.fcount = 0;\r\n        this.sp = new Laya.Point();\r\n        this.ep = new Laya.Point();\r\n        this.ballistic = new Laya.Sprite();\r\n        this.arrhb = new GameHitBox(2, 2);\r\n    }\r\n    reset() {\r\n        this.Aharr = [];\r\n        this.Wharr = [];\r\n        this.Eharr = [];\r\n        this.Hharr = [];\r\n        this.Fharr = [];\r\n        this.Flyharr = [];\r\n        this.info = {};\r\n        this.map = {};\r\n        this.Amap = {};\r\n        this.graphics.clear();\r\n    }\r\n    drawMap() {\r\n        this.info = {};\r\n        this.npcHitBox = null;\r\n        this._isNext = false;\r\n        let hb = null;\r\n        this.reset();\r\n        hb = new GameHitBox(GameBG.ww * GameBG.MAP_COL, GameBG.ww * 3);\r\n        hb.setXY(0, 0);\r\n        this.Wharr.push(hb);\r\n        this.Aharr.push(hb);\r\n        this.Flyharr.push(hb);\r\n        hb = new GameHitBox(GameBG.ww, GameBG.ww * GameBG.MAP_ROW);\r\n        hb.setXY(0, 0);\r\n        this.Wharr.push(hb);\r\n        this.Aharr.push(hb);\r\n        this.Flyharr.push(hb);\r\n        hb = new GameHitBox(GameBG.ww, GameBG.ww * GameBG.MAP_ROW);\r\n        hb.setXY(GameBG.ww * (GameBG.MAP_COL - 1), 0);\r\n        this.Wharr.push(hb);\r\n        this.Aharr.push(hb);\r\n        this.Flyharr.push(hb);\r\n        hb = new GameHitBox(GameBG.ww * GameBG.MAP_COL, GameBG.ww * 3);\r\n        hb.setXY(0, GameBG.ww * (GameBG.MAP_ROW - 3));\r\n        this.Wharr.push(hb);\r\n        this.Aharr.push(hb);\r\n        this.Flyharr.push(hb);\r\n        this.endRowNum = GameBG.MAP_ROW - 3;\r\n        var k = 0;\r\n        for (var j = 0; j < GameBG.MAP_ROW; j++) {\r\n            for (let i = 0; i < GameBG.MAP_COL; i++) {\r\n                var ww = GameBG.ww;\r\n                var x = i * ww;\r\n                var y = j * ww;\r\n                let key = GameBG.arr0[k];\r\n                if (k < GameBG.arr0.length) {\r\n                    this.info[j + \"_\" + i] = key;\r\n                    if (GridType.isWall(key)) {\r\n                        if (this.map[key]) {\r\n                            hb = this.map[key];\r\n                            hb.setRq(hb.x, hb.y, x + GameBG.ww - hb.x, y + GameBG.ww - hb.y);\r\n                        }\r\n                        else {\r\n                            hb = new GameHitBox(GameBG.ww, GameBG.ww);\r\n                            hb.value = key;\r\n                            hb.setXY(x, y);\r\n                            this.Wharr.push(hb);\r\n                            this.map[key] = hb;\r\n                        }\r\n                    }\r\n                    else if (GridType.isRiverPoint(key)\r\n                        || GridType.isRiverScale9Grid(key)\r\n                        || GridType.isRiverScale9Grid2(key)\r\n                        || GridType.isRiverRow(key)\r\n                        || GridType.isRiverCol(key)\r\n                        || GridType.isRiverPoint(key)) {\r\n                        hb = new GameHitBox(GameBG.ww, GameBG.ww);\r\n                        hb.setXY(x, y);\r\n                        this.Wharr.push(hb);\r\n                    }\r\n                    else if (GridType.isFence(key)) {\r\n                        hb = new GameHitBox(GameBG.ww * 3, GameBG.ww);\r\n                        hb.value = key;\r\n                        hb.setXY(x - GameBG.ww, y);\r\n                        this.Wharr.push(hb);\r\n                    }\r\n                    else if (GridType.isNpc(key)) {\r\n                        this.npcHitBox = new GameHitBox(GameBG.ww * 4, GameBG.ww * 4);\r\n                        this.npcHitBox.setXY(x, y);\r\n                    }\r\n                    if (key == BattleFlagID.DOOR) {\r\n                        this.doorHitBox = new GameHitBox(GameBG.ww * 2, GameBG.ww * 2);\r\n                        this.doorHitBox.setXY(x - GameBG.ww2, y - GameBG.ww2);\r\n                    }\r\n                    else if (key == BattleFlagID.GUIDE) {\r\n                        this.guideHitBox = new GameHitBox(GameBG.ww * GameBG.MAP_COL, GameBG.ww);\r\n                        this.guideHitBox.setXY(x, y);\r\n                    }\r\n                    k++;\r\n                }\r\n            }\r\n        }\r\n        k = 0;\r\n        for (var j = 0; j < GameBG.MAP_ROW; j++) {\r\n            for (let i = 0; i < GameBG.MAP_COL; i++) {\r\n                var ww = GameBG.ww;\r\n                var x = i * ww;\r\n                var y = j * ww;\r\n                let key = GameBG.arr0[k];\r\n                if (GridType.isWall(GameBG.arr0[k])) {\r\n                    if (this.Amap[key]) {\r\n                        hb = this.Amap[key];\r\n                        hb.setVV(hb.x, hb.y, x + GameBG.ww - hb.x, y + GameBG.ww - hb.y);\r\n                    }\r\n                    else {\r\n                        hb = new GameHitBox(GameBG.ww, GameBG.ww);\r\n                        hb.setXY(x, y);\r\n                        this.Aharr.push(hb);\r\n                        this.Amap[key] = hb;\r\n                    }\r\n                }\r\n                else if (GridType.isFence(GameBG.arr0[k])) {\r\n                    hb = new GameHitBox(GameBG.ww * 3, GameBG.ww);\r\n                    hb.setXY(x - GameBG.ww, y);\r\n                    this.Aharr.push(hb);\r\n                }\r\n                k++;\r\n            }\r\n        }\r\n        this.addChild(this.ballistic);\r\n        this.setDoor(false);\r\n    }\r\n    clearNpc() {\r\n        this._isNpc = false;\r\n        this.npcHitBox = null;\r\n        this.graphics.clear();\r\n        for (let i = 0; i < this.Wharr.length; i++) {\r\n            var hb = this.Wharr[i];\r\n            this.graphics.drawRect(hb.left, hb.top, hb.ww, hb.hh, null, 0xff0000);\r\n        }\r\n    }\r\n    checkNpc() {\r\n        let bool = false;\r\n        if (this.npcHitBox && Game.hero.hbox.hit(Game.hero.hbox, this.npcHitBox)) {\r\n            bool = true;\r\n            this._isNpc = true;\r\n            this.npcHitBox = null;\r\n            App.sendEvent(Game.Event_NPC);\r\n            console.log(\"碰到npc了=-===================\");\r\n        }\r\n        return bool;\r\n    }\r\n    checkDoor() {\r\n        let bool = false;\r\n        if (this.doorHitBox && Game.hero.hbox.hit(Game.hero.hbox, this.doorHitBox)) {\r\n            bool = true;\r\n            this.doorHitBox = null;\r\n            if (Session.homeData.isPass) {\r\n                Laya.stage.event(GameEvent.PASS_CHAPTER);\r\n            }\r\n            else {\r\n                Game.battleLoader.load();\r\n            }\r\n        }\r\n        return bool;\r\n    }\r\n    setDoor(isOpen) {\r\n        this.graphics.clear();\r\n        for (let i = 0; i < this.Wharr.length; i++) {\r\n            var hb = this.Wharr[i];\r\n            this.graphics.drawRect(hb.left, hb.top, hb.ww, hb.hh, null, 0xff0000);\r\n        }\r\n    }\r\n    chechHitHero_(vx, vy) {\r\n        return this.chechHit(Game.hero, vx, vy);\r\n    }\r\n    chechHit(gamepro, vx, vy) {\r\n        if (this._isNext) {\r\n            return true;\r\n        }\r\n        let chuanqiangSkill = Game.skillManager.isHas(5007);\r\n        let waterSkill = Game.skillManager.isHas(5008);\r\n        var hb = gamepro.hbox;\r\n        var fb = this.futureBox;\r\n        fb.setRq(hb.x + vx, hb.y + vy, hb.ww, hb.hh);\r\n        for (let i = 0; i < this.Wharr.length; i++) {\r\n            let ehb = this.Wharr[i];\r\n            if (gamepro == Game.hero) {\r\n                if (i == 0 && ehb.hit(ehb, fb)) {\r\n                }\r\n                if (chuanqiangSkill && (GridType.isWall(ehb.value) || GridType.isFence(ehb.value))) {\r\n                    continue;\r\n                }\r\n                if (waterSkill && ehb.value == 7777) {\r\n                    continue;\r\n                }\r\n            }\r\n            if (ehb.hit(ehb, fb)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    chechHitArrs(gamepro, vx, vy, thbArr) {\r\n        var hb = gamepro.hbox;\r\n        var fb = this.futureBox;\r\n        fb.setRq(hb.x + vx, hb.y + vy, hb.ww, hb.hh);\r\n        for (let i = 0; i < thbArr.length; i++) {\r\n            let ehb = thbArr[i];\r\n            if (ehb == hb) {\r\n                continue;\r\n            }\r\n            if (ehb.hit(ehb, fb)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    chechHit_arr(thb, thbArr) {\r\n        let ehb = null;\r\n        for (let i = 0; i < thbArr.length; i++) {\r\n            ehb = thbArr[i];\r\n            if (ehb.hit(ehb, thb)) {\r\n                return ehb;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    chechHit_arr_all(thb, thbArr) {\r\n        let arr = null;\r\n        let ehb = null;\r\n        for (let i = 0; i < thbArr.length; i++) {\r\n            ehb = thbArr[i];\r\n            if (ehb.hit(ehb, thb)) {\r\n                if (!arr)\r\n                    arr = [];\r\n                arr.push(ehb);\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n    lineTest(arr, vv) {\r\n        var ebh;\r\n        var ebs = [];\r\n        let l;\r\n        var sp;\r\n        for (let i = 0; i < arr.length; i++) {\r\n            ebh = arr[i];\r\n            l = ebh.getBottom();\r\n            sp = vv.lineTest(l);\r\n            if (sp) {\r\n                ebs.push(sp);\r\n                ebs.push(l);\r\n                ebs.push(ebh);\r\n            }\r\n            l = ebh.getTop();\r\n            sp = vv.lineTest(l);\r\n            if (sp) {\r\n                ebs.push(sp);\r\n                ebs.push(l);\r\n                ebs.push(ebh);\r\n            }\r\n            l = ebh.getLeft();\r\n            sp = vv.lineTest(l);\r\n            if (sp) {\r\n                ebs.push(sp);\r\n                ebs.push(l);\r\n                ebs.push(ebh);\r\n            }\r\n            l = ebh.getRight();\r\n            sp = vv.lineTest(l);\r\n            if (sp) {\r\n                ebs.push(sp);\r\n                ebs.push(l);\r\n                ebs.push(ebh);\r\n            }\r\n        }\r\n        return ebs;\r\n    }\r\n    getPointAndLine(vv, arr) {\r\n        var ebs = this.lineTest(arr, vv);\r\n        if (ebs.length <= 0)\r\n            return null;\r\n        if (ebs.length == 3)\r\n            return ebs;\r\n        var x0 = vv.x0;\r\n        var y0 = vv.y0;\r\n        var rs0 = null;\r\n        var rs1 = null;\r\n        var rs2 = null;\r\n        var len = -1;\r\n        for (let i = 0; i < ebs.length; i += 3) {\r\n            var p = ebs[i];\r\n            var tlen = MaoLineData.len(x0, y0, p.x, p.y);\r\n            if (len == -1) {\r\n                rs0 = p;\r\n                rs1 = ebs[i + 1];\r\n                rs2 = ebs[i + 2];\r\n                len = tlen;\r\n            }\r\n            else if (tlen < len) {\r\n                rs0 = p;\r\n                rs1 = ebs[i + 1];\r\n                rs2 = ebs[i + 2];\r\n                len = tlen;\r\n            }\r\n        }\r\n        ebs.length = 2;\r\n        ebs[0] = rs0;\r\n        ebs[1] = rs1;\r\n        ebs[2] = rs2;\r\n        return ebs;\r\n    }\r\n    drawBallistic(heron) {\r\n        Game.hero.hbox.setXY(Game.hero.sp2d.x, Game.hero.sp2d.y);\r\n        var vx = Math.cos(heron) * GameBG.mw2;\r\n        var vy = Math.sin(heron) * GameBG.mw2;\r\n        var x0 = Game.hero.hbox.cx;\r\n        var y0 = Game.hero.hbox.cy;\r\n        this.sp.x = x0;\r\n        this.sp.y = y0;\r\n        this.fcount = 0;\r\n        var g = this.ballistic.graphics;\r\n        g.clear();\r\n        for (let i = 0; i < 6000; i++) {\r\n            this.arrhb.setVV(x0, y0, vx, vy);\r\n            var ebh;\r\n            ebh = this.chechHit_arr(this.arrhb, this.Wharr);\r\n            if (ebh) {\r\n                g.drawRect(this.arrhb.x, this.arrhb.y, this.arrhb.ww, this.arrhb.hh, null, \"#ff0000\");\r\n                g.drawRect(ebh.x, ebh.y, ebh.ww, ebh.hh, \"#00ff00\", \"#00ff00\");\r\n                g.drawLine(this.sp.x, this.sp.y, x0, y0, \"#ff0000\");\r\n                this.sp.x = x0;\r\n                this.sp.y = y0;\r\n                if (this.fcount < 4) {\r\n                    if (!this.chechHit_arr(this.arrhb.setVV(x0, y0, -1 * vx, vy), this.Wharr)) {\r\n                        vx = -1 * vx;\r\n                        this.fcount++;\r\n                    }\r\n                    else if (!this.chechHit_arr(this.arrhb.setVV(x0, y0, vx, -1 * vy), this.Wharr)) {\r\n                        vy = -1 * vy;\r\n                        this.fcount++;\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            else {\r\n                g.drawRect(this.arrhb.x, this.arrhb.y, this.arrhb.ww, this.arrhb.hh, null, \"#0000ff\");\r\n                x0 += vx;\r\n                y0 += vy;\r\n            }\r\n        }\r\n    }\r\n}\r\n",
  "references": [
    "D:/GirlGunGame/GirlGunGame/src/game/GameBG.ts",
    "D:/GirlGunGame/GirlGunGame/src/game/GameHitBox.ts",
    "D:/GirlGunGame/GirlGunGame/src/game/Game.ts",
    "D:/GirlGunGame/GirlGunGame/src/game/GamePro.ts",
    "D:/GirlGunGame/GirlGunGame/src/game/bg/GridType.ts",
    "D:/GirlGunGame/GirlGunGame/src/game/MaoLineData.ts",
    "D:/GirlGunGame/GirlGunGame/src/main/sys/SysSkill.ts",
    "D:/GirlGunGame/GirlGunGame/src/game/player/Hero.ts",
    "D:/GirlGunGame/GirlGunGame/src/main/scene/BattleFlagID.ts",
    "D:/GirlGunGame/GirlGunGame/src/main/Session.ts",
    "D:/GirlGunGame/GirlGunGame/src/main/GameEvent.ts",
    "D:/GirlGunGame/GirlGunGame/src/core/App.ts"
  ]
}
