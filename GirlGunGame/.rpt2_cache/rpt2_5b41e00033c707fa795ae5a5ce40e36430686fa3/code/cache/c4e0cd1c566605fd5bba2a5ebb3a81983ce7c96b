{
  "code": "import Game from \"../Game\";\r\nimport GameHitBox from \"../GameHitBox\";\r\nimport { GameAI } from \"./GameAI\";\r\nimport Shooting from \"./Shooting\";\r\nimport GameBG from \"../GameBG\";\r\nimport MaoLineData from \"../MaoLineData\";\r\nimport BulletRotate from \"../player/BulletRotate\";\r\nimport App from \"../../core/App\";\r\nimport GameThorn from \"../GameThorn\";\r\nimport Session from \"../../main/Session\";\r\nimport Hero from \"../player/Hero\";\r\nimport LogType from \"../../core/manager/LogType\";\r\nexport default class HeroAI extends GameAI {\r\n    constructor() {\r\n        super();\r\n        this.shootin = HeroAI.shoot;\r\n        this.skillDic = {};\r\n    }\r\n    set run(b) {\r\n        if (this.run_ != b) {\r\n            this.run_ = b;\r\n            if (this.run_) {\r\n                this.stopAi();\r\n                Game.hero.play(GameAI.Run);\r\n            }\r\n            else {\r\n                Game.hero.play(GameAI.Idle);\r\n                this.starAi();\r\n            }\r\n        }\r\n    }\r\n    hit(pro) {\r\n        if (Game.hero.isWudi) {\r\n            return;\r\n        }\r\n        if (Game.hero.gamedata.hp > 0) {\r\n            Game.hero.hurt(pro.hurtValue, false);\r\n        }\r\n        if (Game.hero.gamedata.hp <= 0) {\r\n            Game.hero.die();\r\n            this.run_ = false;\r\n        }\r\n    }\r\n    starAi() {\r\n        if (Game.hero.gamedata.hp <= 0) {\r\n            return;\r\n        }\r\n        if (Game.map0.Eharr.length > 1) {\r\n            Game.map0.Eharr.sort(this.sore0);\r\n        }\r\n        if (Game.map0.Eharr.length > 0) {\r\n            Game.selectEnemy(Game.map0.Eharr[0].linkPro_);\r\n        }\r\n        Game.hero.on(Game.Event_Short, this, this.short);\r\n        this.shootin.at = 0.6;\r\n        this.shootin.now = Game.executor.getWorldNow();\r\n    }\r\n    rotateBullet() {\r\n        let skillIds = Game.skillManager.getRotateSkills();\r\n        let br;\r\n        let hudu = Math.PI / skillIds.length;\r\n        let skillId;\r\n        for (let i = 0; i < skillIds.length; i++) {\r\n            skillId = skillIds[i];\r\n            br = this.skillDic[skillId + \"_1\"];\r\n            if (!br) {\r\n                this.skillDic[skillId + \"_1\"] = BulletRotate.getBullet(skillId);\r\n            }\r\n            br = this.skillDic[skillId + \"_1\"];\r\n            Game.layer3d.addChild(br.sp3d);\r\n            br.move2D(hudu * i);\r\n            br = this.skillDic[skillId + \"_2\"];\r\n            if (!br) {\r\n                this.skillDic[skillId + \"_2\"] = BulletRotate.getBullet(skillId);\r\n            }\r\n            br = this.skillDic[skillId + \"_2\"];\r\n            Game.layer3d.addChild(br.sp3d);\r\n            br.move2D(Math.PI + hudu * i);\r\n        }\r\n    }\r\n    short(ac) {\r\n        if (Game.e0_) {\r\n            var a = GameHitBox.faceTo3D(Game.hero.hbox, Game.e0_.hbox);\r\n            Game.hero.rotation(a);\r\n        }\r\n        if (ac == GameAI.closeCombat) {\r\n            Game.playSound(\"fx_hit.wav\");\r\n            if (Game.e0_) {\r\n                Game.hero.hurtValue = Math.floor(Hero.curHeroData.atk * 1.5);\r\n                Game.e0_.hbox.linkPro_.event(Game.Event_Hit, Game.hero);\r\n            }\r\n            return;\r\n        }\r\n        Game.playSound(\"fx_shoot.wav\");\r\n        let basePower = Hero.curHeroData.atk;\r\n        let angerSkill = Game.skillManager.isHas(3008);\r\n        if (angerSkill) {\r\n            let rate = (Game.hero.gamedata.maxhp - Game.hero.gamedata.hp) / Game.hero.gamedata.maxhp;\r\n            basePower = Math.floor(Game.skillManager.addAttack() * (1 + rate));\r\n        }\r\n        this.onShoot(basePower);\r\n        let skill1005 = Game.skillManager.isHas(1005);\r\n        if (skill1005) {\r\n            if (skill1005.curTimes == 1) {\r\n                Laya.timer.frameOnce(15, this, () => {\r\n                    this.onShoot(basePower * skill1005.damagePercent / 100);\r\n                });\r\n            }\r\n            else {\r\n                Laya.timer.frameOnce(15, this, () => {\r\n                    this.onShoot(basePower * skill1005.damagePercent / 100);\r\n                });\r\n                Laya.timer.frameOnce(30, this, () => {\r\n                    this.onShoot(basePower * skill1005.damagePercent / 100);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    onShoot(basePower) {\r\n        let moveSpeed = GameBG.ww / 2;\r\n        let skillLen = Game.skillManager.skillList.length;\r\n        let skill1001 = Game.skillManager.isHas(1001);\r\n        if (skill1001) {\r\n            if (!this.line)\r\n                this.line = new MaoLineData(0, 0, GameBG.mw2, 0);\r\n            this.line.rad(Game.hero.face2d + Math.PI / 2);\r\n            this.shootin.short_arrow(moveSpeed, Game.hero.face3d, Game.hero, basePower * skill1001.damagePercent / 100).setXY2D(Game.hero.pos2.x + this.line.x_len, Game.hero.pos2.z + this.line.y_len);\r\n            this.line.rad(Game.hero.face2d - Math.PI / 2);\r\n            this.shootin.short_arrow(moveSpeed, Game.hero.face3d, Game.hero, basePower * skill1001.damagePercent / 100).setXY2D(Game.hero.pos2.x + this.line.x_len, Game.hero.pos2.z + this.line.y_len);\r\n            if (skill1001.curTimes >= 2) {\r\n                this.shootin.short_arrow(moveSpeed, Game.hero.face3d, Game.hero, basePower * skill1001.damagePercent / 100);\r\n            }\r\n        }\r\n        else {\r\n            this.shootin.short_arrow(moveSpeed, Game.hero.face3d, Game.hero, basePower);\r\n        }\r\n        let skill1002 = Game.skillManager.isHas(1002);\r\n        if (skill1002) {\r\n            this.shootin.short_arrow(moveSpeed, Game.hero.face3d + Math.PI, Game.hero, basePower * skill1002.damagePercent / 100);\r\n        }\r\n        let skill1003 = Game.skillManager.isHas(1003);\r\n        if (skill1003) {\r\n            let angle = skill1003.curTimes == 1 ? 90 : 120;\r\n            let num = 2 * skill1003.curTimes;\r\n            angle = angle / num;\r\n            let hudu = angle / 180 * Math.PI;\r\n            let count = Math.floor(num / 2);\r\n            for (var i = 1; i <= count; i++) {\r\n                this.shootin.short_arrow(moveSpeed, Game.hero.face3d + hudu * i, Game.hero, basePower * skill1003.damagePercent / 100);\r\n                this.shootin.short_arrow(moveSpeed, Game.hero.face3d - hudu * i, Game.hero, basePower * skill1003.damagePercent / 100);\r\n            }\r\n        }\r\n        let skill1004 = Game.skillManager.isHas(1004);\r\n        if (skill1004) {\r\n            this.shootin.short_arrow(moveSpeed, Game.hero.face3d + Math.PI * 0.5, Game.hero, basePower * skill1004.damagePercent / 100);\r\n            this.shootin.short_arrow(moveSpeed, Game.hero.face3d - Math.PI * 0.5, Game.hero, basePower * skill1004.damagePercent / 100);\r\n        }\r\n    }\r\n    stopAi() {\r\n        this.shootin.cancelAttack();\r\n        Game.hero.off(Game.Event_Short, this, this.short);\r\n    }\r\n    exeAI(pro) {\r\n        if (Session.guideId == 1 || Session.guideId == 2) {\r\n            return;\r\n        }\r\n        var now = Game.executor.getWorldNow();\r\n        Game.bg.checkNpc();\r\n        if (Game.hero.isIce) {\r\n            return;\r\n        }\r\n        this.rotateBullet();\r\n        let chuanqiangSkill = Game.skillManager.isHas(5007);\r\n        if (!chuanqiangSkill) {\r\n            if (GameThorn.arr.length > 0) {\r\n                for (var i = 0; i < GameThorn.arr.length; i++) {\r\n                    let thorn = GameThorn.arr[i];\r\n                    let thornBox = thorn.hbox;\r\n                    if (thorn.inDanger && Game.hero.hbox.hit(Game.hero.hbox, thornBox)) {\r\n                        if (now > thornBox.cdTime) {\r\n                            pro.event(Game.Event_Hit, thorn.diciPro);\r\n                            thornBox.cdTime = now + 2000;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (Session.homeData.isGuide) {\r\n            if (Session.guideId == 3) {\r\n                if (Game.map0.guideHitBox && Game.hero.hbox.hit(Game.hero.hbox, Game.map0.guideHitBox)) {\r\n                    Game.scenneM.battle && Game.scenneM.battle.up(null);\r\n                    Game.scenneM.battle.setGuide(\"主角会自动攻击，移动中不会攻击。\", 2);\r\n                    App.sdkManager.log(LogType.BATTLE_GUIDE, \"主角会自动攻击，移动中不会攻击。\");\r\n                    Game.map0.guideHitBox = null;\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        if (this.run_) {\r\n            this.moves();\r\n            return;\r\n        }\r\n        if (Session.homeData.isGuide) {\r\n            if (Session.guideId == 3) {\r\n                return false;\r\n            }\r\n        }\r\n        if (Game.map0.Eharr.length > 0) {\r\n            if (this.shootin.attackOk()) {\r\n                var a = GameHitBox.faceTo3D(pro.hbox, Game.e0_.hbox);\r\n                var facen2d_ = (2 * Math.PI - a);\r\n                if (Game.e0_.gamedata.hp > 0 && this.shootin.checkBallistic(facen2d_, Game.hero, Game.e0_)) {\r\n                    pro.rotation(a);\r\n                    return this.starAttack();\r\n                }\r\n                if (Game.map0.Eharr.length > 1) {\r\n                    Game.map0.Eharr.sort(this.sore0);\r\n                    var arr = Game.map0.Eharr;\r\n                    for (let i = 0; i < arr.length; i++) {\r\n                        var ero = arr[i];\r\n                        if (ero.linkPro_ != Game.e0_) {\r\n                            var a = GameHitBox.faceTo3D(pro.hbox, ero);\r\n                            var facen2d_ = (2 * Math.PI - a);\r\n                            if (this.shootin.checkBallistic(facen2d_, Game.hero, ero.linkPro_)) {\r\n                                Game.selectEnemy(ero.linkPro_);\r\n                                pro.rotation(a);\r\n                                return this.starAttack();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                Game.selectEnemy(Game.map0.Eharr[0].linkPro_);\r\n                var a = GameHitBox.faceTo3D(pro.hbox, Game.e0_.hbox);\r\n                pro.rotation(a);\r\n                this.starAttack();\r\n            }\r\n        }\r\n        else if (Game.TestShooting == 1 && this.shootin.attackOk()) {\r\n            this.starAttack();\r\n        }\r\n        return true;\r\n    }\r\n    starAttack() {\r\n        let isCloseCombat = GameHitBox.faceToLenth(Game.hero.hbox, Game.e0_.hbox) <= GameBG.ww * 3;\r\n        let ac = \"\";\r\n        if (isCloseCombat) {\r\n            ac = GameAI.closeCombat;\r\n        }\r\n        else {\r\n            ac = GameAI.NormalAttack;\r\n        }\r\n        return this.shootin.starAttack(Game.hero, ac);\r\n    }\r\n    sore0(g0, g1) {\r\n        return GameHitBox.faceToLenth(Game.hero.hbox, g0) - GameHitBox.faceToLenth(Game.hero.hbox, g1);\r\n    }\r\n    move2d(n) {\r\n        Game.hero.move2D(n);\r\n        Game.bg.updateY();\r\n    }\r\n    moves() {\r\n        let n;\r\n        var speed = Game.ro.getSpeed();\r\n        n = Game.ro.getA3d();\r\n        Game.ro.rotate(n);\r\n        if (speed > 0) {\r\n            Game.hero.rotation(n);\r\n            this.move2d(Game.ro.getA());\r\n        }\r\n        else {\r\n        }\r\n    }\r\n}\r\nHeroAI.shoot = new Shooting();\r\n",
  "references": [
    "D:/GirlGunGame/GirlGunGame/src/game/Game.ts",
    "D:/GirlGunGame/GirlGunGame/src/game/GameHitBox.ts",
    "D:/GirlGunGame/GirlGunGame/src/game/ai/GameAI.ts",
    "D:/GirlGunGame/GirlGunGame/src/game/GamePro.ts",
    "D:/GirlGunGame/GirlGunGame/src/game/GameProType.ts",
    "D:/GirlGunGame/GirlGunGame/src/game/ai/Shooting.ts",
    "D:/GirlGunGame/GirlGunGame/src/game/GameBG.ts",
    "D:/GirlGunGame/GirlGunGame/src/game/MaoLineData.ts",
    "D:/GirlGunGame/GirlGunGame/src/shader/line3d.ts",
    "D:/GirlGunGame/GirlGunGame/src/game/move/ArrowGameMove0.ts",
    "D:/GirlGunGame/GirlGunGame/src/game/player/HeroBullet.ts",
    "D:/GirlGunGame/GirlGunGame/src/game/player/BulletRotate.ts",
    "D:/GirlGunGame/GirlGunGame/src/main/sys/SysSkill.ts",
    "D:/GirlGunGame/GirlGunGame/src/game/GameInfrared.ts",
    "D:/GirlGunGame/GirlGunGame/src/main/sys/SysBuff.ts",
    "D:/GirlGunGame/GirlGunGame/src/core/App.ts",
    "D:/GirlGunGame/GirlGunGame/src/game/GameThorn.ts",
    "D:/GirlGunGame/GirlGunGame/src/main/Session.ts",
    "D:/GirlGunGame/GirlGunGame/src/game/player/Hero.ts",
    "D:/GirlGunGame/GirlGunGame/src/core/manager/LogType.ts"
  ]
}
