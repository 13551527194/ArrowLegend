{
  "code": "var Point = Laya.Point;\r\nimport MaoLineTest from \"./MaoLineTest\";\r\nexport default class MaoLineData {\r\n    constructor(x0, y0, x1, y1) {\r\n        this.p0_ = new Point();\r\n        this.p1_ = new Point();\r\n        this.p0_.x = x0;\r\n        this.p0_.y = y0;\r\n        this.p1_.x = x1;\r\n        this.p1_.y = y1;\r\n    }\r\n    reset(x0, y0, x1, y1) {\r\n        this.p0_.x = x0;\r\n        this.p0_.y = y0;\r\n        this.p1_.x = x1;\r\n        this.p1_.y = y1;\r\n    }\r\n    reset00(x0, y0) {\r\n        var l = this.getlen();\r\n        var rad = this.atan2();\r\n        this.p0_.x = x0;\r\n        this.p0_.y = y0;\r\n        this.p1_.x = x0 + Math.cos(rad) * l;\r\n        this.p1_.y = y0 + Math.sin(rad) * l;\r\n    }\r\n    resetlen(len) {\r\n        var l = len;\r\n        var rad = this.atan2();\r\n        this.p1_.x = this.p0_.x + Math.cos(rad) * l;\r\n        this.p1_.y = this.p0_.y + Math.sin(rad) * l;\r\n    }\r\n    draw(g, linecolor, lw = 1) {\r\n        g.drawLine(this.p0_.x, this.p0_.y, this.p1_.x, this.p1_.y, linecolor, lw);\r\n    }\r\n    get p0() {\r\n        return this.p0_;\r\n    }\r\n    get p1() {\r\n        return this.p1_;\r\n    }\r\n    set x0(value) {\r\n        this.p0_.x = value;\r\n    }\r\n    get x0() {\r\n        return this.p0_.x;\r\n    }\r\n    set y0(value) {\r\n        this.p0_.y = value;\r\n    }\r\n    get y0() {\r\n        return this.p0_.y;\r\n    }\r\n    set x1(value) {\r\n        this.p1_.x = value;\r\n    }\r\n    get x1() {\r\n        return this.p1_.x;\r\n    }\r\n    set y1(value) {\r\n        this.p1_.y = value;\r\n    }\r\n    get y1() {\r\n        return this.p1_.y;\r\n    }\r\n    get x_len() {\r\n        return (this.x1 - this.x0);\r\n    }\r\n    get y_len() {\r\n        return (this.y1 - this.y0);\r\n    }\r\n    getlen() {\r\n        var xl = this.x_len;\r\n        var yl = this.y_len;\r\n        return Math.sqrt((xl * xl) + (yl * yl));\r\n    }\r\n    getF0() {\r\n        var xl = this.x_len;\r\n        var yl = this.y_len;\r\n        return new MaoLineData(this.x0, this.y0, this.x0 - yl, this.y0 + xl);\r\n    }\r\n    getF1() {\r\n        var xl = this.x_len;\r\n        var yl = this.y_len;\r\n        return new MaoLineData(this.x0, this.y0, this.x0 + yl, this.y0 - xl);\r\n    }\r\n    lineTest(other) {\r\n        return MaoLineTest.simpleLineTestMao(this, other);\r\n    }\r\n    atan2() {\r\n        return Math.atan2((this.y1 - this.y0), (this.x1 - this.x0));\r\n    }\r\n    rad(rad) {\r\n        var len = this.getlen();\r\n        this.p1.x = this.p0.x + (len * Math.cos(rad));\r\n        this.p1.y = this.p0.y + (len * Math.sin(rad));\r\n        return rad;\r\n    }\r\n    getCenter() {\r\n        var rad = this.atan2();\r\n        var len = this.getlen() / 2;\r\n        return new Laya.Point(this.p0.x + (len * Math.cos(rad)), this.p0.y + (len * Math.sin(rad)));\r\n    }\r\n    rebound(line0) {\r\n        var line0 = line0;\r\n        var linev = this;\r\n        var p = linev.lineTest(line0);\r\n        if (!p) {\r\n            return null;\r\n        }\r\n        var f0 = line0.getF0();\r\n        var f = f0;\r\n        var lengthN = Math.sqrt(f.x_len * f.x_len + f.y_len * f.y_len);\r\n        var n0x = f.x_len / lengthN;\r\n        var n0y = f.y_len / lengthN;\r\n        var nx = -(linev.x_len * n0x + linev.y_len * n0y) * n0x;\r\n        var ny = -(linev.x_len * n0x + linev.y_len * n0y) * n0y;\r\n        var Tx = linev.x_len + nx;\r\n        var Ty = linev.y_len + ny;\r\n        var Fx = 2 * Tx - linev.x_len;\r\n        var Fy = 2 * Ty - linev.y_len;\r\n        var nv = new MaoLineData(p.x, p.y, p.x + Fx, p.y + Fy);\r\n        return nv;\r\n    }\r\n    rebound_error(line0) {\r\n        var linev = this;\r\n        var p = linev.lineTest(line0);\r\n        if (!p) {\r\n            return null;\r\n        }\r\n        var v = new MaoLineData(linev.x0, linev.y0, p.x, p.y);\r\n        var f0l = line0.getlen();\r\n        var n0x = line0.x_len / f0l;\r\n        var n0y = line0.y_len / f0l;\r\n        var nx = -(v.x_len * n0x + v.y_len * n0y) * n0x;\r\n        var ny = -(v.x_len * n0x + v.y_len * n0y) * n0y;\r\n        var Tx = v.x_len + nx;\r\n        var Ty = v.y_len + ny;\r\n        var Fx = 2 * Tx - v.x_len;\r\n        var Fy = 2 * Ty - v.y_len;\r\n        v.reset(p.x, p.y, p.x + Fx, p.y + Fy);\r\n        return v;\r\n    }\r\n    static len(x0, y0, x1, y1) {\r\n        var xx = x1 - x0;\r\n        var yy = y1 - y0;\r\n        return Math.sqrt(xx * xx + yy * yy);\r\n    }\r\n}\r\n",
  "references": [
    "D:/gitworker/Game3DUP/src/game/MaoLineTest.ts"
  ]
}
