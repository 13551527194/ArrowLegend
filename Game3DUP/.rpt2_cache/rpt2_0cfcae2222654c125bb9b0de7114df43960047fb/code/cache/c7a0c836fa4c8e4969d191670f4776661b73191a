{
  "code": "import Game from \"../Game\";\r\nimport GameBG from \"../GameBG\";\r\nimport GameHitBox from \"../GameHitBox\";\r\nimport GameScaleAnimator from \"./GameScaleAnimator\";\r\nexport default class GameScaleAnimator2 extends GameScaleAnimator {\r\n    constructor() {\r\n        super();\r\n        this.movelen = GameBG.ww * 2.5;\r\n        this.futureBox = new GameHitBox(1, 1);\r\n        this.sp = new Laya.Point(0, 0);\r\n    }\r\n    move(nt) {\r\n        var ww = this.movelen * nt;\r\n        let ww2 = 0;\r\n        let i = 0;\r\n        while (i < 10) {\r\n            ww2 += ww / 10;\r\n            var vx = ww2 * Math.cos(this.rad);\r\n            var vy = ww2 * Math.sin(this.rad);\r\n            let nextX = this.sp.x + vx;\r\n            let nextY = this.sp.y + vy;\r\n            if (nextX >= (GameBG.width - GameBG.ww2) || nextX <= GameBG.ww2 || nextY >= ((Game.map0.endRowNum - 1) * GameBG.ww) || nextY <= 10 * GameBG.ww) {\r\n                return;\r\n            }\r\n            this.futureBox.setXY(nextX, nextY);\r\n            var hits = Game.map0.Wharr;\r\n            if (!Game.map0.chechHit_arr(this.futureBox, hits)) {\r\n                this.ms.setXY2DBox(this.futureBox.x, this.futureBox.y);\r\n            }\r\n            else {\r\n                return;\r\n            }\r\n            i++;\r\n        }\r\n    }\r\n    zoom(nt, zoom, ms) {\r\n        if (nt > 1)\r\n            nt = 1;\r\n        if (nt < 0.5)\r\n            nt = 0.5;\r\n        nt = nt * 1;\r\n        nt = Math.sin(Math.PI * (nt));\r\n        if (nt < 0)\r\n            nt *= -1;\r\n        let st = 0;\r\n        st = zoom * 0.8 * (1 - nt);\r\n        st = zoom * 0.2 + st;\r\n        ms.sp3d.transform.localScaleZ = st;\r\n        st = zoom * 0.2 * (1 - nt);\r\n        st = zoom * 1 + st;\r\n        ms.sp3d.transform.localScaleX = st;\r\n    }\r\n    ai(ms) {\r\n        if (this.starttime != 0) {\r\n            var now = Game.executor.getWorldNow();\r\n            var zoom = ms.tScale;\r\n            if (now >= this.starttime + this.playtime) {\r\n                ms.sp3d.transform.localScaleZ = zoom;\r\n                ms.sp3d.transform.localScaleX = zoom;\r\n                ms.sp3d.transform.localScaleY = zoom;\r\n                this.starttime = 0;\r\n                this.ms = null;\r\n            }\r\n            else {\r\n                if (!this.ms) {\r\n                    this.ms = ms;\r\n                    this.rad = ms.face2d + Math.PI;\r\n                    this.sp.x = ms.hbox.x;\r\n                    this.sp.y = ms.hbox.y;\r\n                    this.futureBox.setRq(this.sp.x, this.sp.y, ms.hbox.ww, ms.hbox.hh);\r\n                }\r\n                let nt = now - this.starttime;\r\n                nt = nt / this.playtime;\r\n                this.move(nt);\r\n                this.zoom(nt, zoom, ms);\r\n            }\r\n        }\r\n    }\r\n}\r\n",
  "references": [
    "D:/game01/Layabox/Game3DUP/src/game/player/Monster.ts",
    "D:/game01/Layabox/Game3DUP/src/game/Game.ts",
    "D:/game01/Layabox/Game3DUP/src/game/GameBG.ts",
    "D:/game01/Layabox/Game3DUP/src/game/GameHitBox.ts",
    "D:/game01/Layabox/Game3DUP/src/game/ai/GameScaleAnimator.ts"
  ]
}
