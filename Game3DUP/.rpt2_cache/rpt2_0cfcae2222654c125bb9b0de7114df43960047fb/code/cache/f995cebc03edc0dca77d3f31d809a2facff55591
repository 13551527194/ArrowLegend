{
  "code": "import Game from \"../Game\";\r\nimport GameHitBox from \"../GameHitBox\";\r\nimport { GameMove } from \"./GameMove\";\r\nimport MaoLineData from \"../MaoLineData\";\r\nimport GameBG from \"../GameBG\";\r\nexport default class ArrowGameMove0 extends GameMove {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.future = new GameHitBox(2, 2);\r\n        this.speed = 0;\r\n        this.sp = new Laya.Point();\r\n        this.st = 0;\r\n        this.n = 0;\r\n        this.cos = 0;\r\n        this.sin = 0;\r\n        this.arrowlen = 10;\r\n        this.line = new MaoLineData(0, 0, 0, this.arrowlen);\r\n        this.vv = new MaoLineData(0, 0, 0, 1);\r\n        this.fv = null;\r\n        this.ii = 1;\r\n    }\r\n    move2d(n, pro, speed, hitStop) {\r\n        if (pro.isDie) {\r\n            return false;\r\n        }\r\n        if (speed == 0)\r\n            return false;\r\n        if (this.fv != null) {\r\n            pro.rotation(2 * Math.PI - this.fv.atan2());\r\n            n = pro.face2d;\r\n            pro.setcXcY2DBox(this.fv.x1, this.fv.y1);\r\n            this.fv = null;\r\n        }\r\n        var now = Game.executor.getWorldNow();\r\n        if (this.speed != speed || this.n != n) {\r\n            this.sp.x = pro.hbox.x;\r\n            this.sp.y = pro.hbox.y;\r\n            this.st = now;\r\n            this.n = n;\r\n            this.sin = Math.sin(n);\r\n            this.cos = Math.cos(n);\r\n            this.speed = speed;\r\n        }\r\n        var hits = Game.map0.Eharr;\r\n        if (pro.hit_blacklist) {\r\n            var tem = [];\r\n            for (let i = 0; i < hits.length; i++) {\r\n                var e = hits[i];\r\n                if (!pro.checkBlackList(e)) {\r\n                    tem.push(e);\r\n                }\r\n            }\r\n            hits = tem;\r\n        }\r\n        var box = pro.hbox;\r\n        var line = this.line;\r\n        line.reset00(box.cx, box.cy);\r\n        line.rad(n);\r\n        var vv = this.vv;\r\n        box = this.future.setRq(line.x1 - GameBG.mw4, line.y1 - GameBG.mw4, GameBG.mw2, GameBG.mw2);\r\n        var enemy = Game.map0.chechHit_arr(this.future, hits);\r\n        if (enemy) {\r\n            if (this.hitEnemy(enemy, pro) == 0) {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n        box = this.future.setVV(line.x0, line.y0, line.x_len, line.y_len);\r\n        var all = Game.map0.chechHit_arr_all(this.future, hits);\r\n        if (all) {\r\n            vv.reset(line.x0, line.y0, line.x1, line.y1);\r\n            var rs = Game.map0.getPointAndLine(vv, all);\r\n            if (rs) {\r\n                enemy = rs[2];\r\n                if (enemy) {\r\n                    if (this.hitEnemy(enemy, pro) == 0) {\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            box = this.future.setVV(line.x1, line.y1, vx, vz);\r\n            var all = Game.map0.chechHit_arr_all(this.future, hits);\r\n            if (all) {\r\n                vv.reset(line.x0, line.y0, line.x1, line.y1);\r\n                var rs = Game.map0.getPointAndLine(vv, all);\r\n                if (rs) {\r\n                    enemy = rs[2];\r\n                    if (enemy) {\r\n                        if (this.hitEnemy(enemy, pro) == 0) {\r\n                            return false;\r\n                        }\r\n                        else {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        hits = Game.map0.Aharr;\r\n        var vx = pro.speed * Math.cos(n);\r\n        var vz = pro.speed * Math.sin(n);\r\n        box = this.future.setVV(line.x1, line.y1, vx, vz);\r\n        vv.reset(line.x1, line.y1, line.x1 + vx, line.y1 + vz);\r\n        var all = Game.map0.chechHit_arr_all(this.future, hits);\r\n        if (all) {\r\n            var rs = Game.map0.getPointAndLine(vv, all);\r\n            if (rs) {\r\n                var p = rs[0];\r\n                var l = rs[1];\r\n                vv.reset(vv.x0, vv.y0, p.x, p.y);\r\n                pro.setXY2D(pro.pos2.x + vv.x_len, pro.pos2.z + vv.y_len);\r\n                l = vv.rebound(l);\r\n                if (l) {\r\n                    l.resetlen(this.arrowlen);\r\n                }\r\n            }\r\n            pro.fcount--;\r\n            if (pro.fantanSkill) {\r\n                pro.hurtValue = Math.floor(pro.hurtValue * pro.fantanSkill.damagePercent / 100);\r\n            }\r\n            this.fv = l;\r\n            if (pro.fcount <= 0) {\r\n                pro.die();\r\n                return false;\r\n            }\r\n        }\r\n        pro.setXY2D(pro.pos2.x + vx, pro.pos2.z + vz);\r\n        if (Math.abs(pro.pos2.x) > GameBG.ww * GameBG.MAP_COL || Math.abs(pro.pos2.z) > GameBG.ww * GameBG.MAP_ROW) {\r\n            pro.die();\r\n        }\r\n        return true;\r\n    }\r\n    sore0(g0, g1) {\r\n        if (!this.he_)\r\n            return 0;\r\n        return GameHitBox.faceToLenth(this.he_, g0) - GameHitBox.faceToLenth(this.he_, g1);\r\n    }\r\n    hitEnemy(enemy, pro) {\r\n        enemy.linkPro_.event(Game.Event_Hit, pro);\r\n        if (pro.tansheSkill && this.ii > 0) {\r\n            if (!pro.hit_blacklist) {\r\n                pro.hit_blacklist = [];\r\n            }\r\n            pro.hit_blacklist.push(enemy);\r\n            this.ii--;\r\n            if (pro.tansheSkill) {\r\n                pro.hurtValue = Math.floor(pro.hurtValue * pro.tansheSkill.damagePercent / 100);\r\n            }\r\n            else if (pro.chuantouSkill) {\r\n                pro.hurtValue = Math.floor(pro.hurtValue * pro.chuantouSkill.damagePercent / 100);\r\n            }\r\n            let arr = Game.map0.Eharr;\r\n            for (let i = 0; i < arr.length; i++) {\r\n                let e = arr[i];\r\n                if (e != enemy) {\r\n                    pro.setXY2D(enemy.linkPro_.pos2.x, enemy.linkPro_.pos2.z);\r\n                    var a = GameHitBox.faceTo3D(pro.hbox, e);\r\n                    pro.rotation(a);\r\n                    return 1;\r\n                }\r\n            }\r\n            pro.die();\r\n            return 0;\r\n        }\r\n        if (!pro.chuantouSkill) {\r\n            if (!pro.hit_blacklist) {\r\n                pro.hit_blacklist = [];\r\n            }\r\n            pro.hit_blacklist.push(enemy);\r\n            pro.die();\r\n            return 0;\r\n        }\r\n        pro.die();\r\n        return 0;\r\n    }\r\n}\r\n",
  "references": [
    "D:/game01/Layabox/Game3DUP/src/game/Game.ts",
    "D:/game01/Layabox/Game3DUP/src/game/GameProType.ts",
    "D:/game01/Layabox/Game3DUP/src/game/GameHitBox.ts",
    "D:/game01/Layabox/Game3DUP/src/game/GamePro.ts",
    "D:/game01/Layabox/Game3DUP/src/game/move/GameMove.ts",
    "D:/game01/Layabox/Game3DUP/src/game/MaoLineData.ts",
    "D:/game01/Layabox/Game3DUP/src/game/GameBG.ts",
    "D:/game01/Layabox/Game3DUP/src/game/player/HeroBullet.ts",
    "D:/game01/Layabox/Game3DUP/src/main/sys/SysSkill.ts"
  ]
}
