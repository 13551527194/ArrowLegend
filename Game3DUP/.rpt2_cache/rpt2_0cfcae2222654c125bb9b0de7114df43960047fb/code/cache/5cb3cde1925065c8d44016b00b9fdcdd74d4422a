{
  "code": "export default class GameShaderObj extends Laya.EventDispatcher {\r\n    constructor() {\r\n        super();\r\n        if (GameShaderObj.init_) {\r\n            this.initShader();\r\n            GameShaderObj.init_ = true;\r\n        }\r\n    }\r\n    setShader0(sp3d, type) {\r\n        if (type == 8000 && !GameShaderObj.sp) {\r\n            GameShaderObj.sp = sp3d;\r\n            console.log(sp3d);\r\n        }\r\n    }\r\n    initShader() {\r\n        var attributeMap = {\r\n            'a_Position': Laya.VertexMesh.MESH_POSITION0,\r\n            'a_Normal': Laya.VertexMesh.MESH_NORMAL0,\r\n            'a_Texcoord': Laya.VertexMesh.MESH_TEXTURECOORDINATE0,\r\n            'a_BoneWeights': Laya.VertexMesh.MESH_BLENDWEIGHT0,\r\n            'a_BoneIndices': Laya.VertexMesh.MESH_BLENDINDICES0\r\n        };\r\n        var uniformMap = {\r\n            'u_Bones': Laya.Shader3D.PERIOD_CUSTOM,\r\n            'u_CameraPos': Laya.Shader3D.PERIOD_CAMERA,\r\n            'u_MvpMatrix': Laya.Shader3D.PERIOD_SPRITE,\r\n            'u_WorldMat': Laya.Shader3D.PERIOD_SPRITE,\r\n            'u_texture': Laya.Shader3D.PERIOD_MATERIAL,\r\n            'u_marginalColor': Laya.Shader3D.PERIOD_MATERIAL,\r\n            'u_DirectionLight.Direction': Laya.Shader3D.PERIOD_SCENE,\r\n            'u_DirectionLight.Color': Laya.Shader3D.PERIOD_SCENE\r\n        };\r\n        var vs = `\r\n        #include \"Lighting.glsl\";\r\n        attribute vec4 a_Position;\r\n        attribute vec2 a_Texcoord;\r\n        attribute vec3 a_Normal;\r\n        uniform mat4 u_MvpMatrix;\r\n        uniform mat4 u_WorldMat;\r\n        varying vec2 v_Texcoord;\r\n        varying vec3 v_Normal;\r\n        #ifdef BONE\r\n        attribute vec4 a_BoneIndices;\r\n        attribute vec4 a_BoneWeights;\r\n        const int c_MaxBoneCount = 24;\r\n        uniform mat4 u_Bones[c_MaxBoneCount];\r\n        #endif\r\n        #if defined(DIRECTIONLIGHT)\r\n        varying vec3 v_PositionWorld;\r\n        #endif\r\n        void main()\r\n        {\r\n        #ifdef BONE\r\n        mat4 skinTransform=mat4(0.0);\r\n        skinTransform += u_Bones[int(a_BoneIndices.x)] * a_BoneWeights.x;\r\n        skinTransform += u_Bones[int(a_BoneIndices.y)] * a_BoneWeights.y;\r\n        skinTransform += u_Bones[int(a_BoneIndices.z)] * a_BoneWeights.z;\r\n        skinTransform += u_Bones[int(a_BoneIndices.w)] * a_BoneWeights.w;\r\n        vec4 position = skinTransform * a_Position;\r\n        gl_Position=u_MvpMatrix * position;\r\n        mat3 worldMat=mat3(u_WorldMat * skinTransform);\r\n        #else\r\n        gl_Position=u_MvpMatrix * a_Position;\r\n        mat3 worldMat=mat3(u_WorldMat);\r\n        #endif\r\n        v_Texcoord=a_Texcoord;\r\n        v_Normal=worldMat*a_Normal;\r\n        #if defined(DIRECTIONLIGHT)\r\n        #ifdef BONE\r\n        v_PositionWorld=(u_WorldMat*position).xyz;\r\n        #else\r\n        v_PositionWorld=(u_WorldMat*a_Position).xyz;\r\n        #endif\r\n        #endif\r\n        gl_Position=remapGLPositionZ(gl_Position); \r\n        }`;\r\n        var ps = `\r\n        #ifdef FSHIGHPRECISION\r\n        precision highp float;\r\n        #else\r\n        precision mediump float;\r\n        #endif\r\n        #include \"Lighting.glsl\";\r\n        varying vec2 v_Texcoord;\r\n        uniform sampler2D u_texture;\r\n        uniform vec3 u_marginalColor;\r\n        varying vec3 v_Normal;\r\n        #if defined(DIRECTIONLIGHT)\r\n        uniform vec3 u_CameraPos;\r\n        varying vec3 v_PositionWorld;\r\n        uniform DirectionLight u_DirectionLight;\r\n        #endif\r\n        void main()\r\n        {\r\n        gl_FragColor=texture2D(u_texture,v_Texcoord);\r\n        vec3 normal=normalize(v_Normal);\r\n        vec3 toEyeDir = normalize(u_CameraPos-v_PositionWorld);\r\n        float Rim = 1.0 - max(0.0,dot(toEyeDir, normal));\r\n        vec3 Emissive = 15.0 * u_DirectionLight.Color * u_marginalColor * pow(Rim,3.0); \r\n        gl_FragColor = texture2D(u_texture, v_Texcoord) + vec4(Emissive,1.0);\r\n        }`;\r\n        var customShader = Laya.Shader3D.add(\"CustomShader\");\r\n        var subShader = new Laya.SubShader(attributeMap, uniformMap, Laya.SkinnedMeshSprite3D.shaderDefines);\r\n        customShader.addSubShader(subShader);\r\n        subShader.addShaderPass(vs, ps);\r\n    }\r\n}\r\nGameShaderObj.init_ = true;\r\n",
  "references": [
    "D:/game01/Layabox/Game3DUP/src/game/CustomMaterial.ts"
  ]
}
