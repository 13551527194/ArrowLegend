{
  "code": "import { GameAI } from \"./GameAI\";\r\nimport MonsterShader from \"../player/MonsterShader\";\r\nimport Game from \"../Game\";\r\nimport GameHitBox from \"../GameHitBox\";\r\nimport GameBG from \"../GameBG\";\r\nimport SysBullet from \"../../main/sys/SysBullet\";\r\nimport App from \"../../core/App\";\r\nimport AttackType from \"./AttackType\";\r\nimport SplitSkill from \"../skill/SplitSkill\";\r\nimport CoinEffect from \"../effect/CoinEffect\";\r\nimport SysBuff from \"../../main/sys/SysBuff\";\r\nexport default class BaseAI extends GameAI {\r\n    constructor(ms) {\r\n        super();\r\n        this.skillISbs = [];\r\n        this.now = 0;\r\n        this.shaders = 0;\r\n        this.collisionCd = 0;\r\n        this.stiff = 500;\r\n        this.pro = ms;\r\n        this.sysEnemy = this.pro.sysEnemy;\r\n        this.normalSb = null;\r\n        if (this.sysEnemy.normalAttack > 0) {\r\n            this.normalSb = App.tableManager.getDataByNameAndId(SysBullet.NAME, this.sysEnemy.normalAttack);\r\n        }\r\n        this.skillISbs = [];\r\n        if (this.sysEnemy.skillId != '0') {\r\n            var arr = this.sysEnemy.skillId.split(',');\r\n            for (var m = 0; m < arr.length; m++) {\r\n                let id = Number(arr[m]);\r\n                if (id > 0) {\r\n                    let sysBullet = App.tableManager.getDataByNameAndId(SysBullet.NAME, id);\r\n                    this.skillISbs.push(sysBullet);\r\n                    if (sysBullet.bulletType == AttackType.SPLIT) {\r\n                        this.splitSkill = new SplitSkill(sysBullet);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.sysEnemy.enemyBlack > 0) {\r\n            let HIT = Laya.ClassUtils.getClass(\"HIT_\" + this.sysEnemy.enemyBlack);\r\n            this.g2 = new HIT();\r\n        }\r\n    }\r\n    checkHeroCollision() {\r\n        if (this.pro.gamedata.hp <= 0) {\r\n            return;\r\n        }\r\n        var now = Game.executor.getWorldNow();\r\n        if (GameHitBox.faceToLenth(this.pro.hbox, Game.hero.hbox) < GameBG.ww2) {\r\n            if (now > this.collisionCd) {\r\n                if (Game.hero.hbox.linkPro_) {\r\n                    this.pro.hurtValue = 150;\r\n                    Game.hero.hbox.linkPro_.event(Game.Event_Hit, this.pro);\r\n                    this.collisionCd = now + 2000;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    setShader() {\r\n        if (this.shaders > 0 && this.now >= this.shaders) {\r\n            this.shaders = 0;\r\n            var ms = this.pro;\r\n            if (MonsterShader.map[ms.sysEnemy.enemymode]) {\r\n                var shader = MonsterShader.map[ms.sysEnemy.enemymode];\r\n                shader.setShader0(this.pro.sp3d, 0);\r\n            }\r\n        }\r\n    }\r\n    exeAI(pro) {\r\n        if (this.pro.gamedata.hp <= 0) {\r\n            return;\r\n        }\r\n        if (!this.run_)\r\n            return;\r\n        this.now = Game.executor.getWorldNow();\r\n        this.setShader();\r\n        this.hitEffect();\r\n        return false;\r\n    }\r\n    hitEffect() {\r\n        if (this.g2) {\r\n            this.g2.ai(this.pro);\r\n        }\r\n    }\r\n    starAi() {\r\n        this.run_ = true;\r\n        this.pro.play(GameAI.Idle);\r\n    }\r\n    stopAi() {\r\n        this.run_ = false;\r\n    }\r\n    setCrit(pro, id) {\r\n        let critSkill = Game.skillManager.isHas(id);\r\n        if (critSkill) {\r\n            let critBuff = App.tableManager.getDataByNameAndId(SysBuff.NAME, critSkill.skillEffect1);\r\n            if (critBuff) {\r\n                let rate3006 = critBuff.addCrit / 1000;\r\n                if ((1 - Math.random()) > rate3006) {\r\n                    pro.hurtValue = Math.floor(pro.hurtValue * 1.5 + pro.hurtValue * (critBuff.addHurt / 1000));\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    setBoomHead() {\r\n        let dieSkill = Game.skillManager.isHas(1007);\r\n        if (dieSkill) {\r\n            let arr = dieSkill.skillcondition.split(\",\");\r\n            let hpRate = Number(arr[0]);\r\n            let rate = Number(arr[1]);\r\n            if (this.pro.gamedata.hp / this.pro.gamedata.maxhp < hpRate / 100) {\r\n                if ((1 - Math.random()) > rate / 100) {\r\n                    this.pro.hurtValue = this.pro.gamedata.hp;\r\n                    console.log(\"爆头了\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    hit(pro, isBuff = false) {\r\n        if (this.pro.gamedata.hp <= 0) {\r\n            return;\r\n        }\r\n        let crit3006 = this.setCrit(pro, 3006);\r\n        let crit3007 = this.setCrit(pro, 3007);\r\n        this.setBoomHead();\r\n        if (pro.buffAry.length > 0) {\r\n            for (let i = 0; i < pro.buffAry.length; i++) {\r\n                let buffId = pro.buffAry[i];\r\n                if (this.pro.buffAry.indexOf(buffId) == -1) {\r\n                    Game.buffM.addBuff(pro.buffAry[i], this.pro, pro);\r\n                    this.pro.buffAry.push(buffId);\r\n                }\r\n            }\r\n        }\r\n        this.pro.hurt(pro.hurtValue, crit3006 || crit3007, isBuff);\r\n        if (this.pro.gamedata.hp <= 0) {\r\n            this.die();\r\n        }\r\n        else {\r\n            if (this.sysEnemy.enemyAi != 0) {\r\n                if (this.pro.acstr == GameAI.Idle || this.pro.acstr == GameAI.Run) {\r\n                    this.pro.play(GameAI.TakeDamage);\r\n                }\r\n            }\r\n            if (isBuff) {\r\n                return;\r\n            }\r\n            this.stiffTime = this.now;\r\n            if (this.g2 && this.g2.isOk() && !this.pro.unBlocking) {\r\n                if (this.sysEnemy.moveType != 5) {\r\n                    var a = pro.face3d + Math.PI;\r\n                    this.pro.rotation(a);\r\n                }\r\n                if (this.g2.starttime == 0) {\r\n                    this.g2.starttime = this.now;\r\n                    this.g2.now = this.now;\r\n                    this.g2.playtime = 200;\r\n                }\r\n            }\r\n            var ms = this.pro;\r\n            if (MonsterShader.map[ms.sysEnemy.enemymode]) {\r\n                var shader = MonsterShader.map[ms.sysEnemy.enemymode];\r\n                shader.setShader0(this.pro.sp3d, 1);\r\n                var now = Game.executor.getWorldNow();\r\n                this.shaders = now + 250;\r\n            }\r\n        }\r\n    }\r\n    die() {\r\n        this.setShader();\r\n        let goldNum = this.sysEnemy.dropGold;\r\n        if (goldNum > 0) {\r\n            CoinEffect.addEffect(this.pro, goldNum);\r\n        }\r\n        Game.battleExp += this.sysEnemy.dropExp;\r\n        this.splitSkill && this.splitSkill.exeSkill(this.now, this.pro);\r\n        this.pro.die();\r\n    }\r\n}\r\n",
  "references": [
    "D:/game01/Layabox/Game3DUP/src/game/ai/GameAI.ts",
    "D:/game01/Layabox/Game3DUP/src/game/GamePro.ts",
    "D:/game01/Layabox/Game3DUP/src/game/player/Monster.ts",
    "D:/game01/Layabox/Game3DUP/src/game/player/MonsterShader.ts",
    "D:/game01/Layabox/Game3DUP/src/game/Game.ts",
    "D:/game01/Layabox/Game3DUP/src/game/GameHitBox.ts",
    "D:/game01/Layabox/Game3DUP/src/game/GameBG.ts",
    "D:/game01/Layabox/Game3DUP/src/main/sys/SysBullet.ts",
    "D:/game01/Layabox/Game3DUP/src/main/sys/SysEnemy.ts",
    "D:/game01/Layabox/Game3DUP/src/core/App.ts",
    "D:/game01/Layabox/Game3DUP/src/game/ai/AttackType.ts",
    "D:/game01/Layabox/Game3DUP/src/game/skill/SplitSkill.ts",
    "D:/game01/Layabox/Game3DUP/src/game/ai/GameScaleAnimator.ts",
    "D:/game01/Layabox/Game3DUP/src/game/effect/CoinEffect.ts",
    "D:/game01/Layabox/Game3DUP/src/main/sys/SysSkill.ts",
    "D:/game01/Layabox/Game3DUP/src/main/sys/SysBuff.ts",
    "D:/game01/Layabox/Game3DUP/src/game/skill/player/FireBuff.ts",
    "D:/game01/Layabox/Game3DUP/src/game/player/HeroBullet.ts"
  ]
}
