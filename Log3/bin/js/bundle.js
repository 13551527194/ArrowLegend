var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
Object.defineProperty(exports, "__esModule", { value: true });
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
    };
    GameConfig.width = 750;
    GameConfig.height = 1136;
    GameConfig.scaleMode = "showall";
    GameConfig.screenMode = "vertical";
    GameConfig.alignV = "middle";
    GameConfig.alignH = "center";
    GameConfig.startScene = "MainScene.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("./ui/layaMaxUI");
var ListCell = /** @class */ (function (_super) {
    __extends(ListCell, _super);
    function ListCell() {
        return _super.call(this) || this;
    }
    ListCell.prototype.update = function (data) {
        this.idTxt.text = data.id;
        this.strTxt.text = data.content;
        this.countTxt.text = data.count + "";
    };
    return ListCell;
}(layaMaxUI_1.ui.txtCellUI));
exports.default = ListCell;
},{"./ui/layaMaxUI":6}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LogData = /** @class */ (function () {
    function LogData(str) {
        var arr = str.split("\t");
        this.time = parseInt(arr[0]);
        this.gameVer = arr[1];
        this.code = arr[2];
        this.platform = arr[3];
        this.onlyId = arr[4];
        this.actionId = arr[5];
        this.content = arr[6];
        if (arr.length >= 8) {
            this.pName = arr[7];
        }
    }
    LogData.prototype.online = function () {
        var a = Date.now();
        if ((a - this.time) < 5 * 60 * 1000) {
            return true;
        }
        return false;
    };
    return LogData;
}());
exports.default = LogData;
},{}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var LogData_1 = require("./LogData");
var MyData_1 = require("./MyData");
var ListCell_1 = require("./ListCell");
var Main = /** @class */ (function () {
    function Main() {
        this.nameMap = {};
        this.onlyMap = {};
        this.useMap = {};
        this.main = null;
        this.logArr = [];
        this.logTypeMap = {};
        this.pNameMap = {};
        this.allMap = {};
        this.mmm = {};
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        Laya.stage.scaleMode = Laya.Stage.SCALE_SHOWALL;
        if (Laya.Browser.onPC == false) {
            Laya.stage.screenMode = Laya.Stage.SCREEN_VERTICAL;
        }
        else {
            Laya.stage.screenMode = Laya.Stage.SCREEN_HORIZONTAL;
        }
        Laya.stage.alignH = "center";
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
        this.nameMap["VZGU"] = "胡老总";
        this.nameMap["igoY"] = "刘跃进";
        this.nameMap["o2X0"] = "达叔";
    };
    Main.prototype.onConfigLoaded = function () {
        this.onlyMap["1"] = {};
        this.onlyMap["11"] = {};
        this.useMap["20"] = {};
        //加载IDE指定的场景
        Laya.Scene.open("MainScene.scene", false, null, new Laya.Handler(this, this.comFun));
        this.logTypeMap[18] = "广告加载失败";
        this.logTypeMap[19] = "广告显示成功";
        this.logTypeMap[20] = "广告播放完毕";
        this.logTypeMap[21] = "广告失败2";
        this.logTypeMap[10001] = "显示登陆界面";
        this.logTypeMap[10002] = "点击开始按钮";
        this.logTypeMap[10003] = "登陆成功";
        this.logTypeMap[10004] = "注册用户";
        this.logTypeMap[10005] = "显示主界面";
        this.logTypeMap[10006] = "新手战斗加载";
        this.logTypeMap[10007] = "滑动摇杆移动到指定位置";
        this.logTypeMap[10008] = "最佳控制区域";
        this.logTypeMap[10009] = "主角会自动攻击，移动中不会攻击";
        this.logTypeMap[10010] = "显示引导怪";
        this.logTypeMap[10011] = "通过传送进入下一关";
        this.logTypeMap[10012] = "到达传送点进入正式地图";
        this.logTypeMap[10013] = "点击复活";
        this.logTypeMap[10014] = "复活成功";
        var ss = "100000,100101,100201,100301,100401,100501,100601,100701,100801,100901,101001,200101,200201,200301,200401,200501,200601,200701,200801,200901,201001,201101,201201,201301,201401,201501,201601,201701,201801,201901,202001,300101,300201,300301,300401,300501,300601,300701,300801,300901,301001,301002,301003,301004,301101,301201,301301,301401,301501,301601,301701,301801,301901,302001,302002,302003,302101,302201,302301,302401,302501,302601,302701,302801,302901,303001";
        var arr = ss.split(",");
        for (var i = 0; i < arr.length; i++) {
            this.logTypeMap[Number(arr[i])] = "地图" + arr[i];
        }
        this.allMap = {};
        var key;
        for (key in this.logTypeMap) {
            var myData = new MyData_1.default();
            myData.id = key;
            myData.content = this.logTypeMap[key];
            myData.count = 0;
            this.allMap[key] = myData;
        }
    };
    Main.prototype.itemErrorFun = function () {
        for (var _i = 0, _a = this.logArr; _i < _a.length; _i++) {
            var i = _a[_i];
            if (i.actionId == "1") {
                //this.main.txt2.text += ( "物品错误的唯一登陆id是:" + i.onlyId + "\n" );
            }
        }
    };
    Main.prototype.timeFun = function () {
        var s = 0;
        var a = 0;
        for (var _i = 0, _a = this.logArr; _i < _a.length; _i++) {
            var i = _a[_i];
            if (i.actionId == "0") {
                a++;
                s += parseInt(i.content);
            }
        }
        return "平均加载时长:" + parseInt(s / a / 1000 + "") + "秒";
    };
    Main.prototype.comFun = function (e) {
        this.main = e;
        this.main.nowBtn.clickHandler = new Laya.Handler(this, this.loadNow);
        this.main.selectBtn.clickHandler = new Laya.Handler(this, this.selectFun);
        this.main.input.text = this.getNowString();
        this.main.adBtn.clickHandler = new Laya.Handler(this, this.hhhFun);
        this.list = new Laya.List();
        this.list.pos(this.main.box.x, this.main.box.y);
        this.main.box.addChild(this.list);
        this.list.itemRender = ListCell_1.default;
        this.list.repeatX = 1;
        this.list.repeatY = 25;
        this.list.vScrollBarSkin = "";
        this.list.renderHandler = new Laya.Handler(this, this.updateItem);
        this.list.array = [];
    };
    Main.prototype.updateItem = function (cell, index) {
        var data = this.list.getItem(index);
        cell.update(data);
    };
    Main.prototype.hhhFun = function () {
        var arr = [];
        for (var i in this.mmm) {
            var obj = {};
            obj.id = i;
            obj.value = this.mmm[i];
            arr.push(obj);
        }
        arr.sort(function (a, b) {
            return b.value - a.value;
        });
        Laya.stage.removeChildren();
        var ss = "";
        for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {
            var iia = arr_1[_i];
            ss += (iia.value + " ---- " + iia.id + " " + this.getName(iia.id) + "\n");
        }
        var t = new Laya.Text();
        t.text = ss;
        t.color = "#ffffff";
        t.fontSize = 26;
        t.graphics.drawRect(0, 0, Laya.stage.width, Laya.stage.height, "#000000");
        Laya.stage.addChild(t);
    };
    Main.prototype.getName = function (s) {
        for (var i in this.nameMap) {
            if (s.substr(s.length - 4) == i) {
                return this.nameMap[i];
            }
        }
        return this.pNameMap[s];
    };
    Main.prototype.selectFun = function () {
        this.loadByDate(this.main.input.text);
    };
    Main.prototype.loadNow = function () {
        this.loadByDate(this.getNowString());
    };
    Main.prototype.getNowString = function () {
        var d = new Date();
        var y = d.getFullYear();
        var m = d.getMonth() + 1;
        var day = d.getDate();
        var str = this.v(y) + "-" + this.v(m) + "-" + this.v(day);
        return str;
    };
    Main.prototype.loadByDate = function (str) {
        this.main.txt2.text = "";
        var url = "";
        if (this.main.cb1.selectedIndex == 0) {
            url = "https://s1.kuwan511.com";
        }
        else if (this.main.cb1.selectedIndex == 1) {
            url = "https://s1.kuwan511.com";
        }
        Laya.loader.load(url + "/DFile." + str + ".log?ver=" + Math.random(), new Laya.Handler(this, this.txtCom), null, Laya.Loader.TEXT, 1, false, "", true);
    };
    Main.prototype.v = function (a) {
        return (a < 10) ? ("0" + a) : (a + "");
    };
    Main.prototype.txtCom = function (text) {
        this.logArr.length = 0;
        var key;
        for (key in this.allMap) {
            var myData = this.allMap[key];
            myData.count = 0;
        }
        var arr = text.split("\n");
        for (var _i = 0, arr_2 = arr; _i < arr_2.length; _i++) {
            var i = arr_2[_i];
            var log = new LogData_1.default(i);
            var myData = this.allMap[log.actionId];
            if (myData) {
                myData.count++;
            }
        }
        // this.addText( this.getOnline() );
        // this.addText( this.getText( logMap ) );
        this.showResult();
    };
    Main.prototype.showResult = function () {
        this.main.text.text = "";
        var key;
        var arr = [];
        for (key in this.allMap) {
            var myData = this.allMap[key];
            this.main.text.text += myData.id + "\t" + myData.content + "\t" + myData.count + "\n";
            arr.push(myData);
        }
        this.list.array = arr;
    };
    Main.prototype.addUserNum = function (code) {
        if (this.mmm[code] == null) {
            this.mmm[code] = 1;
        }
        else {
            this.mmm[code]++;
        }
    };
    Main.prototype.addText = function (text) {
        this.main.text.text += (text + "\n");
    };
    //查一下 为什么没有一级
    Main.prototype.getOnline = function () {
        var onlineMap = {};
        var a = 0;
        for (var _i = 0, _a = this.logArr; _i < _a.length; _i++) {
            var i = _a[_i];
            if (i.online()) {
                if (onlineMap[i.code] == null) {
                    a++;
                    onlineMap[i.code] = 1;
                }
            }
        }
        console.log("在线map:", onlineMap);
        this.main.txt2.text += "在线code:";
        this.main.txt2.text += JSON.stringify(onlineMap);
        return "5分钟内在线人数:" + a;
    };
    Main.prototype.getText = function (obj) {
        var s = "";
        for (var i in obj) {
            if (i == "undefined") {
                continue;
            }
            s += i;
            s += " ";
            if (this.logTypeMap[i + ""] == null) {
                s += "\n";
                continue;
            }
            var arr = this.logTypeMap[i + ""];
            if (typeof arr === "string") {
                s += this.logTypeMap[i + ""];
            }
            else {
                s += arr[0];
                var ss = arr[1];
                var sss = ss.run();
                s += sss;
            }
            s += " ";
            s += obj[i];
            s += "\n";
        }
        return s;
    };
    return Main;
}());
//激活启动类
new Main();
},{"./GameConfig":1,"./ListCell":2,"./LogData":3,"./MyData":5}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MyData = /** @class */ (function () {
    function MyData() {
        this.count = 0;
    }
    return MyData;
}());
exports.default = MyData;
},{}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var REG = Laya.ClassUtils.regClass;
var ui;
(function (ui) {
    var MainSceneUI = /** @class */ (function (_super) {
        __extends(MainSceneUI, _super);
        function MainSceneUI() {
            return _super.call(this) || this;
        }
        MainSceneUI.prototype.createChildren = function () {
            _super.prototype.createChildren.call(this);
            this.loadScene("MainScene");
        };
        return MainSceneUI;
    }(Laya.View));
    ui.MainSceneUI = MainSceneUI;
    REG("ui.MainSceneUI", MainSceneUI);
    var txtCellUI = /** @class */ (function (_super) {
        __extends(txtCellUI, _super);
        function txtCellUI() {
            return _super.call(this) || this;
        }
        txtCellUI.prototype.createChildren = function () {
            _super.prototype.createChildren.call(this);
            this.createView(txtCellUI.uiView);
        };
        txtCellUI.uiView = { "type": "View", "props": { "width": 750, "height": 34 }, "compId": 2, "child": [{ "type": "Label", "props": { "y": 0, "x": 0, "width": 100, "var": "idTxt", "text": "label", "height": 34, "fontSize": 30, "color": "#f9f4f4", "bold": true }, "compId": 3 }, { "type": "Label", "props": { "y": 0, "x": 156, "width": 432, "var": "strTxt", "text": "label", "height": 34, "fontSize": 30, "color": "#f9f4f4", "bold": true }, "compId": 4 }, { "type": "Label", "props": { "y": 0, "x": 650, "width": 100, "var": "countTxt", "text": "label", "height": 34, "fontSize": 30, "color": "#f9f4f4", "bold": true }, "compId": 5 }], "loadList": [], "loadList3D": [] };
        return txtCellUI;
    }(Laya.View));
    ui.txtCellUI = txtCellUI;
    REG("ui.txtCellUI", txtCellUI);
})(ui = exports.ui || (exports.ui = {}));
},{}]},{},[4])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
